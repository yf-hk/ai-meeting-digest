
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `WorkspaceMember` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model WorkspaceMember
 * 
 */
export type WorkspaceMemberModel = runtime.Types.Result.DefaultSelection<Prisma.$WorkspaceMemberPayload>

export type AggregateWorkspaceMember = {
  _count: WorkspaceMemberCountAggregateOutputType | null
  _min: WorkspaceMemberMinAggregateOutputType | null
  _max: WorkspaceMemberMaxAggregateOutputType | null
}

export type WorkspaceMemberMinAggregateOutputType = {
  id: string | null
  workspaceId: string | null
  userId: string | null
  role: $Enums.WorkspaceRole | null
  joinedAt: Date | null
}

export type WorkspaceMemberMaxAggregateOutputType = {
  id: string | null
  workspaceId: string | null
  userId: string | null
  role: $Enums.WorkspaceRole | null
  joinedAt: Date | null
}

export type WorkspaceMemberCountAggregateOutputType = {
  id: number
  workspaceId: number
  userId: number
  role: number
  joinedAt: number
  _all: number
}


export type WorkspaceMemberMinAggregateInputType = {
  id?: true
  workspaceId?: true
  userId?: true
  role?: true
  joinedAt?: true
}

export type WorkspaceMemberMaxAggregateInputType = {
  id?: true
  workspaceId?: true
  userId?: true
  role?: true
  joinedAt?: true
}

export type WorkspaceMemberCountAggregateInputType = {
  id?: true
  workspaceId?: true
  userId?: true
  role?: true
  joinedAt?: true
  _all?: true
}

export type WorkspaceMemberAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which WorkspaceMember to aggregate.
   */
  where?: Prisma.WorkspaceMemberWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of WorkspaceMembers to fetch.
   */
  orderBy?: Prisma.WorkspaceMemberOrderByWithRelationInput | Prisma.WorkspaceMemberOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.WorkspaceMemberWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` WorkspaceMembers from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` WorkspaceMembers.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned WorkspaceMembers
  **/
  _count?: true | WorkspaceMemberCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: WorkspaceMemberMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: WorkspaceMemberMaxAggregateInputType
}

export type GetWorkspaceMemberAggregateType<T extends WorkspaceMemberAggregateArgs> = {
      [P in keyof T & keyof AggregateWorkspaceMember]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateWorkspaceMember[P]>
    : Prisma.GetScalarType<T[P], AggregateWorkspaceMember[P]>
}




export type WorkspaceMemberGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.WorkspaceMemberWhereInput
  orderBy?: Prisma.WorkspaceMemberOrderByWithAggregationInput | Prisma.WorkspaceMemberOrderByWithAggregationInput[]
  by: Prisma.WorkspaceMemberScalarFieldEnum[] | Prisma.WorkspaceMemberScalarFieldEnum
  having?: Prisma.WorkspaceMemberScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: WorkspaceMemberCountAggregateInputType | true
  _min?: WorkspaceMemberMinAggregateInputType
  _max?: WorkspaceMemberMaxAggregateInputType
}

export type WorkspaceMemberGroupByOutputType = {
  id: string
  workspaceId: string
  userId: string
  role: $Enums.WorkspaceRole
  joinedAt: Date
  _count: WorkspaceMemberCountAggregateOutputType | null
  _min: WorkspaceMemberMinAggregateOutputType | null
  _max: WorkspaceMemberMaxAggregateOutputType | null
}

type GetWorkspaceMemberGroupByPayload<T extends WorkspaceMemberGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<WorkspaceMemberGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof WorkspaceMemberGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], WorkspaceMemberGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], WorkspaceMemberGroupByOutputType[P]>
      }
    >
  > 



export type WorkspaceMemberWhereInput = {
  AND?: Prisma.WorkspaceMemberWhereInput | Prisma.WorkspaceMemberWhereInput[]
  OR?: Prisma.WorkspaceMemberWhereInput[]
  NOT?: Prisma.WorkspaceMemberWhereInput | Prisma.WorkspaceMemberWhereInput[]
  id?: Prisma.StringFilter<"WorkspaceMember"> | string
  workspaceId?: Prisma.StringFilter<"WorkspaceMember"> | string
  userId?: Prisma.StringFilter<"WorkspaceMember"> | string
  role?: Prisma.EnumWorkspaceRoleFilter<"WorkspaceMember"> | $Enums.WorkspaceRole
  joinedAt?: Prisma.DateTimeFilter<"WorkspaceMember"> | Date | string
  workspace?: Prisma.XOR<Prisma.WorkspaceScalarRelationFilter, Prisma.WorkspaceWhereInput>
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}

export type WorkspaceMemberOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  workspaceId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  role?: Prisma.SortOrder
  joinedAt?: Prisma.SortOrder
  workspace?: Prisma.WorkspaceOrderByWithRelationInput
  user?: Prisma.UserOrderByWithRelationInput
}

export type WorkspaceMemberWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  workspaceId_userId?: Prisma.WorkspaceMemberWorkspaceIdUserIdCompoundUniqueInput
  AND?: Prisma.WorkspaceMemberWhereInput | Prisma.WorkspaceMemberWhereInput[]
  OR?: Prisma.WorkspaceMemberWhereInput[]
  NOT?: Prisma.WorkspaceMemberWhereInput | Prisma.WorkspaceMemberWhereInput[]
  workspaceId?: Prisma.StringFilter<"WorkspaceMember"> | string
  userId?: Prisma.StringFilter<"WorkspaceMember"> | string
  role?: Prisma.EnumWorkspaceRoleFilter<"WorkspaceMember"> | $Enums.WorkspaceRole
  joinedAt?: Prisma.DateTimeFilter<"WorkspaceMember"> | Date | string
  workspace?: Prisma.XOR<Prisma.WorkspaceScalarRelationFilter, Prisma.WorkspaceWhereInput>
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}, "id" | "workspaceId_userId">

export type WorkspaceMemberOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  workspaceId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  role?: Prisma.SortOrder
  joinedAt?: Prisma.SortOrder
  _count?: Prisma.WorkspaceMemberCountOrderByAggregateInput
  _max?: Prisma.WorkspaceMemberMaxOrderByAggregateInput
  _min?: Prisma.WorkspaceMemberMinOrderByAggregateInput
}

export type WorkspaceMemberScalarWhereWithAggregatesInput = {
  AND?: Prisma.WorkspaceMemberScalarWhereWithAggregatesInput | Prisma.WorkspaceMemberScalarWhereWithAggregatesInput[]
  OR?: Prisma.WorkspaceMemberScalarWhereWithAggregatesInput[]
  NOT?: Prisma.WorkspaceMemberScalarWhereWithAggregatesInput | Prisma.WorkspaceMemberScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"WorkspaceMember"> | string
  workspaceId?: Prisma.StringWithAggregatesFilter<"WorkspaceMember"> | string
  userId?: Prisma.StringWithAggregatesFilter<"WorkspaceMember"> | string
  role?: Prisma.EnumWorkspaceRoleWithAggregatesFilter<"WorkspaceMember"> | $Enums.WorkspaceRole
  joinedAt?: Prisma.DateTimeWithAggregatesFilter<"WorkspaceMember"> | Date | string
}

export type WorkspaceMemberCreateInput = {
  id?: string
  role?: $Enums.WorkspaceRole
  joinedAt?: Date | string
  workspace: Prisma.WorkspaceCreateNestedOneWithoutMembersInput
  user: Prisma.UserCreateNestedOneWithoutWorkspaceMembershipsInput
}

export type WorkspaceMemberUncheckedCreateInput = {
  id?: string
  workspaceId: string
  userId: string
  role?: $Enums.WorkspaceRole
  joinedAt?: Date | string
}

export type WorkspaceMemberUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumWorkspaceRoleFieldUpdateOperationsInput | $Enums.WorkspaceRole
  joinedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  workspace?: Prisma.WorkspaceUpdateOneRequiredWithoutMembersNestedInput
  user?: Prisma.UserUpdateOneRequiredWithoutWorkspaceMembershipsNestedInput
}

export type WorkspaceMemberUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  workspaceId?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumWorkspaceRoleFieldUpdateOperationsInput | $Enums.WorkspaceRole
  joinedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WorkspaceMemberCreateManyInput = {
  id?: string
  workspaceId: string
  userId: string
  role?: $Enums.WorkspaceRole
  joinedAt?: Date | string
}

export type WorkspaceMemberUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumWorkspaceRoleFieldUpdateOperationsInput | $Enums.WorkspaceRole
  joinedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WorkspaceMemberUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  workspaceId?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumWorkspaceRoleFieldUpdateOperationsInput | $Enums.WorkspaceRole
  joinedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WorkspaceMemberListRelationFilter = {
  every?: Prisma.WorkspaceMemberWhereInput
  some?: Prisma.WorkspaceMemberWhereInput
  none?: Prisma.WorkspaceMemberWhereInput
}

export type WorkspaceMemberOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type WorkspaceMemberWorkspaceIdUserIdCompoundUniqueInput = {
  workspaceId: string
  userId: string
}

export type WorkspaceMemberCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  workspaceId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  role?: Prisma.SortOrder
  joinedAt?: Prisma.SortOrder
}

export type WorkspaceMemberMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  workspaceId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  role?: Prisma.SortOrder
  joinedAt?: Prisma.SortOrder
}

export type WorkspaceMemberMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  workspaceId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  role?: Prisma.SortOrder
  joinedAt?: Prisma.SortOrder
}

export type WorkspaceMemberCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.WorkspaceMemberCreateWithoutUserInput, Prisma.WorkspaceMemberUncheckedCreateWithoutUserInput> | Prisma.WorkspaceMemberCreateWithoutUserInput[] | Prisma.WorkspaceMemberUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.WorkspaceMemberCreateOrConnectWithoutUserInput | Prisma.WorkspaceMemberCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.WorkspaceMemberCreateManyUserInputEnvelope
  connect?: Prisma.WorkspaceMemberWhereUniqueInput | Prisma.WorkspaceMemberWhereUniqueInput[]
}

export type WorkspaceMemberUncheckedCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.WorkspaceMemberCreateWithoutUserInput, Prisma.WorkspaceMemberUncheckedCreateWithoutUserInput> | Prisma.WorkspaceMemberCreateWithoutUserInput[] | Prisma.WorkspaceMemberUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.WorkspaceMemberCreateOrConnectWithoutUserInput | Prisma.WorkspaceMemberCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.WorkspaceMemberCreateManyUserInputEnvelope
  connect?: Prisma.WorkspaceMemberWhereUniqueInput | Prisma.WorkspaceMemberWhereUniqueInput[]
}

export type WorkspaceMemberUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.WorkspaceMemberCreateWithoutUserInput, Prisma.WorkspaceMemberUncheckedCreateWithoutUserInput> | Prisma.WorkspaceMemberCreateWithoutUserInput[] | Prisma.WorkspaceMemberUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.WorkspaceMemberCreateOrConnectWithoutUserInput | Prisma.WorkspaceMemberCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.WorkspaceMemberUpsertWithWhereUniqueWithoutUserInput | Prisma.WorkspaceMemberUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.WorkspaceMemberCreateManyUserInputEnvelope
  set?: Prisma.WorkspaceMemberWhereUniqueInput | Prisma.WorkspaceMemberWhereUniqueInput[]
  disconnect?: Prisma.WorkspaceMemberWhereUniqueInput | Prisma.WorkspaceMemberWhereUniqueInput[]
  delete?: Prisma.WorkspaceMemberWhereUniqueInput | Prisma.WorkspaceMemberWhereUniqueInput[]
  connect?: Prisma.WorkspaceMemberWhereUniqueInput | Prisma.WorkspaceMemberWhereUniqueInput[]
  update?: Prisma.WorkspaceMemberUpdateWithWhereUniqueWithoutUserInput | Prisma.WorkspaceMemberUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.WorkspaceMemberUpdateManyWithWhereWithoutUserInput | Prisma.WorkspaceMemberUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.WorkspaceMemberScalarWhereInput | Prisma.WorkspaceMemberScalarWhereInput[]
}

export type WorkspaceMemberUncheckedUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.WorkspaceMemberCreateWithoutUserInput, Prisma.WorkspaceMemberUncheckedCreateWithoutUserInput> | Prisma.WorkspaceMemberCreateWithoutUserInput[] | Prisma.WorkspaceMemberUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.WorkspaceMemberCreateOrConnectWithoutUserInput | Prisma.WorkspaceMemberCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.WorkspaceMemberUpsertWithWhereUniqueWithoutUserInput | Prisma.WorkspaceMemberUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.WorkspaceMemberCreateManyUserInputEnvelope
  set?: Prisma.WorkspaceMemberWhereUniqueInput | Prisma.WorkspaceMemberWhereUniqueInput[]
  disconnect?: Prisma.WorkspaceMemberWhereUniqueInput | Prisma.WorkspaceMemberWhereUniqueInput[]
  delete?: Prisma.WorkspaceMemberWhereUniqueInput | Prisma.WorkspaceMemberWhereUniqueInput[]
  connect?: Prisma.WorkspaceMemberWhereUniqueInput | Prisma.WorkspaceMemberWhereUniqueInput[]
  update?: Prisma.WorkspaceMemberUpdateWithWhereUniqueWithoutUserInput | Prisma.WorkspaceMemberUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.WorkspaceMemberUpdateManyWithWhereWithoutUserInput | Prisma.WorkspaceMemberUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.WorkspaceMemberScalarWhereInput | Prisma.WorkspaceMemberScalarWhereInput[]
}

export type WorkspaceMemberCreateNestedManyWithoutWorkspaceInput = {
  create?: Prisma.XOR<Prisma.WorkspaceMemberCreateWithoutWorkspaceInput, Prisma.WorkspaceMemberUncheckedCreateWithoutWorkspaceInput> | Prisma.WorkspaceMemberCreateWithoutWorkspaceInput[] | Prisma.WorkspaceMemberUncheckedCreateWithoutWorkspaceInput[]
  connectOrCreate?: Prisma.WorkspaceMemberCreateOrConnectWithoutWorkspaceInput | Prisma.WorkspaceMemberCreateOrConnectWithoutWorkspaceInput[]
  createMany?: Prisma.WorkspaceMemberCreateManyWorkspaceInputEnvelope
  connect?: Prisma.WorkspaceMemberWhereUniqueInput | Prisma.WorkspaceMemberWhereUniqueInput[]
}

export type WorkspaceMemberUncheckedCreateNestedManyWithoutWorkspaceInput = {
  create?: Prisma.XOR<Prisma.WorkspaceMemberCreateWithoutWorkspaceInput, Prisma.WorkspaceMemberUncheckedCreateWithoutWorkspaceInput> | Prisma.WorkspaceMemberCreateWithoutWorkspaceInput[] | Prisma.WorkspaceMemberUncheckedCreateWithoutWorkspaceInput[]
  connectOrCreate?: Prisma.WorkspaceMemberCreateOrConnectWithoutWorkspaceInput | Prisma.WorkspaceMemberCreateOrConnectWithoutWorkspaceInput[]
  createMany?: Prisma.WorkspaceMemberCreateManyWorkspaceInputEnvelope
  connect?: Prisma.WorkspaceMemberWhereUniqueInput | Prisma.WorkspaceMemberWhereUniqueInput[]
}

export type WorkspaceMemberUpdateManyWithoutWorkspaceNestedInput = {
  create?: Prisma.XOR<Prisma.WorkspaceMemberCreateWithoutWorkspaceInput, Prisma.WorkspaceMemberUncheckedCreateWithoutWorkspaceInput> | Prisma.WorkspaceMemberCreateWithoutWorkspaceInput[] | Prisma.WorkspaceMemberUncheckedCreateWithoutWorkspaceInput[]
  connectOrCreate?: Prisma.WorkspaceMemberCreateOrConnectWithoutWorkspaceInput | Prisma.WorkspaceMemberCreateOrConnectWithoutWorkspaceInput[]
  upsert?: Prisma.WorkspaceMemberUpsertWithWhereUniqueWithoutWorkspaceInput | Prisma.WorkspaceMemberUpsertWithWhereUniqueWithoutWorkspaceInput[]
  createMany?: Prisma.WorkspaceMemberCreateManyWorkspaceInputEnvelope
  set?: Prisma.WorkspaceMemberWhereUniqueInput | Prisma.WorkspaceMemberWhereUniqueInput[]
  disconnect?: Prisma.WorkspaceMemberWhereUniqueInput | Prisma.WorkspaceMemberWhereUniqueInput[]
  delete?: Prisma.WorkspaceMemberWhereUniqueInput | Prisma.WorkspaceMemberWhereUniqueInput[]
  connect?: Prisma.WorkspaceMemberWhereUniqueInput | Prisma.WorkspaceMemberWhereUniqueInput[]
  update?: Prisma.WorkspaceMemberUpdateWithWhereUniqueWithoutWorkspaceInput | Prisma.WorkspaceMemberUpdateWithWhereUniqueWithoutWorkspaceInput[]
  updateMany?: Prisma.WorkspaceMemberUpdateManyWithWhereWithoutWorkspaceInput | Prisma.WorkspaceMemberUpdateManyWithWhereWithoutWorkspaceInput[]
  deleteMany?: Prisma.WorkspaceMemberScalarWhereInput | Prisma.WorkspaceMemberScalarWhereInput[]
}

export type WorkspaceMemberUncheckedUpdateManyWithoutWorkspaceNestedInput = {
  create?: Prisma.XOR<Prisma.WorkspaceMemberCreateWithoutWorkspaceInput, Prisma.WorkspaceMemberUncheckedCreateWithoutWorkspaceInput> | Prisma.WorkspaceMemberCreateWithoutWorkspaceInput[] | Prisma.WorkspaceMemberUncheckedCreateWithoutWorkspaceInput[]
  connectOrCreate?: Prisma.WorkspaceMemberCreateOrConnectWithoutWorkspaceInput | Prisma.WorkspaceMemberCreateOrConnectWithoutWorkspaceInput[]
  upsert?: Prisma.WorkspaceMemberUpsertWithWhereUniqueWithoutWorkspaceInput | Prisma.WorkspaceMemberUpsertWithWhereUniqueWithoutWorkspaceInput[]
  createMany?: Prisma.WorkspaceMemberCreateManyWorkspaceInputEnvelope
  set?: Prisma.WorkspaceMemberWhereUniqueInput | Prisma.WorkspaceMemberWhereUniqueInput[]
  disconnect?: Prisma.WorkspaceMemberWhereUniqueInput | Prisma.WorkspaceMemberWhereUniqueInput[]
  delete?: Prisma.WorkspaceMemberWhereUniqueInput | Prisma.WorkspaceMemberWhereUniqueInput[]
  connect?: Prisma.WorkspaceMemberWhereUniqueInput | Prisma.WorkspaceMemberWhereUniqueInput[]
  update?: Prisma.WorkspaceMemberUpdateWithWhereUniqueWithoutWorkspaceInput | Prisma.WorkspaceMemberUpdateWithWhereUniqueWithoutWorkspaceInput[]
  updateMany?: Prisma.WorkspaceMemberUpdateManyWithWhereWithoutWorkspaceInput | Prisma.WorkspaceMemberUpdateManyWithWhereWithoutWorkspaceInput[]
  deleteMany?: Prisma.WorkspaceMemberScalarWhereInput | Prisma.WorkspaceMemberScalarWhereInput[]
}

export type EnumWorkspaceRoleFieldUpdateOperationsInput = {
  set?: $Enums.WorkspaceRole
}

export type WorkspaceMemberCreateWithoutUserInput = {
  id?: string
  role?: $Enums.WorkspaceRole
  joinedAt?: Date | string
  workspace: Prisma.WorkspaceCreateNestedOneWithoutMembersInput
}

export type WorkspaceMemberUncheckedCreateWithoutUserInput = {
  id?: string
  workspaceId: string
  role?: $Enums.WorkspaceRole
  joinedAt?: Date | string
}

export type WorkspaceMemberCreateOrConnectWithoutUserInput = {
  where: Prisma.WorkspaceMemberWhereUniqueInput
  create: Prisma.XOR<Prisma.WorkspaceMemberCreateWithoutUserInput, Prisma.WorkspaceMemberUncheckedCreateWithoutUserInput>
}

export type WorkspaceMemberCreateManyUserInputEnvelope = {
  data: Prisma.WorkspaceMemberCreateManyUserInput | Prisma.WorkspaceMemberCreateManyUserInput[]
  skipDuplicates?: boolean
}

export type WorkspaceMemberUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.WorkspaceMemberWhereUniqueInput
  update: Prisma.XOR<Prisma.WorkspaceMemberUpdateWithoutUserInput, Prisma.WorkspaceMemberUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.WorkspaceMemberCreateWithoutUserInput, Prisma.WorkspaceMemberUncheckedCreateWithoutUserInput>
}

export type WorkspaceMemberUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.WorkspaceMemberWhereUniqueInput
  data: Prisma.XOR<Prisma.WorkspaceMemberUpdateWithoutUserInput, Prisma.WorkspaceMemberUncheckedUpdateWithoutUserInput>
}

export type WorkspaceMemberUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.WorkspaceMemberScalarWhereInput
  data: Prisma.XOR<Prisma.WorkspaceMemberUpdateManyMutationInput, Prisma.WorkspaceMemberUncheckedUpdateManyWithoutUserInput>
}

export type WorkspaceMemberScalarWhereInput = {
  AND?: Prisma.WorkspaceMemberScalarWhereInput | Prisma.WorkspaceMemberScalarWhereInput[]
  OR?: Prisma.WorkspaceMemberScalarWhereInput[]
  NOT?: Prisma.WorkspaceMemberScalarWhereInput | Prisma.WorkspaceMemberScalarWhereInput[]
  id?: Prisma.StringFilter<"WorkspaceMember"> | string
  workspaceId?: Prisma.StringFilter<"WorkspaceMember"> | string
  userId?: Prisma.StringFilter<"WorkspaceMember"> | string
  role?: Prisma.EnumWorkspaceRoleFilter<"WorkspaceMember"> | $Enums.WorkspaceRole
  joinedAt?: Prisma.DateTimeFilter<"WorkspaceMember"> | Date | string
}

export type WorkspaceMemberCreateWithoutWorkspaceInput = {
  id?: string
  role?: $Enums.WorkspaceRole
  joinedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutWorkspaceMembershipsInput
}

export type WorkspaceMemberUncheckedCreateWithoutWorkspaceInput = {
  id?: string
  userId: string
  role?: $Enums.WorkspaceRole
  joinedAt?: Date | string
}

export type WorkspaceMemberCreateOrConnectWithoutWorkspaceInput = {
  where: Prisma.WorkspaceMemberWhereUniqueInput
  create: Prisma.XOR<Prisma.WorkspaceMemberCreateWithoutWorkspaceInput, Prisma.WorkspaceMemberUncheckedCreateWithoutWorkspaceInput>
}

export type WorkspaceMemberCreateManyWorkspaceInputEnvelope = {
  data: Prisma.WorkspaceMemberCreateManyWorkspaceInput | Prisma.WorkspaceMemberCreateManyWorkspaceInput[]
  skipDuplicates?: boolean
}

export type WorkspaceMemberUpsertWithWhereUniqueWithoutWorkspaceInput = {
  where: Prisma.WorkspaceMemberWhereUniqueInput
  update: Prisma.XOR<Prisma.WorkspaceMemberUpdateWithoutWorkspaceInput, Prisma.WorkspaceMemberUncheckedUpdateWithoutWorkspaceInput>
  create: Prisma.XOR<Prisma.WorkspaceMemberCreateWithoutWorkspaceInput, Prisma.WorkspaceMemberUncheckedCreateWithoutWorkspaceInput>
}

export type WorkspaceMemberUpdateWithWhereUniqueWithoutWorkspaceInput = {
  where: Prisma.WorkspaceMemberWhereUniqueInput
  data: Prisma.XOR<Prisma.WorkspaceMemberUpdateWithoutWorkspaceInput, Prisma.WorkspaceMemberUncheckedUpdateWithoutWorkspaceInput>
}

export type WorkspaceMemberUpdateManyWithWhereWithoutWorkspaceInput = {
  where: Prisma.WorkspaceMemberScalarWhereInput
  data: Prisma.XOR<Prisma.WorkspaceMemberUpdateManyMutationInput, Prisma.WorkspaceMemberUncheckedUpdateManyWithoutWorkspaceInput>
}

export type WorkspaceMemberCreateManyUserInput = {
  id?: string
  workspaceId: string
  role?: $Enums.WorkspaceRole
  joinedAt?: Date | string
}

export type WorkspaceMemberUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumWorkspaceRoleFieldUpdateOperationsInput | $Enums.WorkspaceRole
  joinedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  workspace?: Prisma.WorkspaceUpdateOneRequiredWithoutMembersNestedInput
}

export type WorkspaceMemberUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  workspaceId?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumWorkspaceRoleFieldUpdateOperationsInput | $Enums.WorkspaceRole
  joinedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WorkspaceMemberUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  workspaceId?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumWorkspaceRoleFieldUpdateOperationsInput | $Enums.WorkspaceRole
  joinedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WorkspaceMemberCreateManyWorkspaceInput = {
  id?: string
  userId: string
  role?: $Enums.WorkspaceRole
  joinedAt?: Date | string
}

export type WorkspaceMemberUpdateWithoutWorkspaceInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumWorkspaceRoleFieldUpdateOperationsInput | $Enums.WorkspaceRole
  joinedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutWorkspaceMembershipsNestedInput
}

export type WorkspaceMemberUncheckedUpdateWithoutWorkspaceInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumWorkspaceRoleFieldUpdateOperationsInput | $Enums.WorkspaceRole
  joinedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WorkspaceMemberUncheckedUpdateManyWithoutWorkspaceInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumWorkspaceRoleFieldUpdateOperationsInput | $Enums.WorkspaceRole
  joinedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type WorkspaceMemberSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  workspaceId?: boolean
  userId?: boolean
  role?: boolean
  joinedAt?: boolean
  workspace?: boolean | Prisma.WorkspaceDefaultArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["workspaceMember"]>

export type WorkspaceMemberSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  workspaceId?: boolean
  userId?: boolean
  role?: boolean
  joinedAt?: boolean
  workspace?: boolean | Prisma.WorkspaceDefaultArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["workspaceMember"]>

export type WorkspaceMemberSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  workspaceId?: boolean
  userId?: boolean
  role?: boolean
  joinedAt?: boolean
  workspace?: boolean | Prisma.WorkspaceDefaultArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["workspaceMember"]>

export type WorkspaceMemberSelectScalar = {
  id?: boolean
  workspaceId?: boolean
  userId?: boolean
  role?: boolean
  joinedAt?: boolean
}

export type WorkspaceMemberOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "workspaceId" | "userId" | "role" | "joinedAt", ExtArgs["result"]["workspaceMember"]>
export type WorkspaceMemberInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  workspace?: boolean | Prisma.WorkspaceDefaultArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type WorkspaceMemberIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  workspace?: boolean | Prisma.WorkspaceDefaultArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type WorkspaceMemberIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  workspace?: boolean | Prisma.WorkspaceDefaultArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}

export type $WorkspaceMemberPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "WorkspaceMember"
  objects: {
    workspace: Prisma.$WorkspacePayload<ExtArgs>
    user: Prisma.$UserPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    workspaceId: string
    userId: string
    role: $Enums.WorkspaceRole
    joinedAt: Date
  }, ExtArgs["result"]["workspaceMember"]>
  composites: {}
}

export type WorkspaceMemberGetPayload<S extends boolean | null | undefined | WorkspaceMemberDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$WorkspaceMemberPayload, S>

export type WorkspaceMemberCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<WorkspaceMemberFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: WorkspaceMemberCountAggregateInputType | true
  }

export interface WorkspaceMemberDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['WorkspaceMember'], meta: { name: 'WorkspaceMember' } }
  /**
   * Find zero or one WorkspaceMember that matches the filter.
   * @param {WorkspaceMemberFindUniqueArgs} args - Arguments to find a WorkspaceMember
   * @example
   * // Get one WorkspaceMember
   * const workspaceMember = await prisma.workspaceMember.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends WorkspaceMemberFindUniqueArgs>(args: Prisma.SelectSubset<T, WorkspaceMemberFindUniqueArgs<ExtArgs>>): Prisma.Prisma__WorkspaceMemberClient<runtime.Types.Result.GetResult<Prisma.$WorkspaceMemberPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one WorkspaceMember that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {WorkspaceMemberFindUniqueOrThrowArgs} args - Arguments to find a WorkspaceMember
   * @example
   * // Get one WorkspaceMember
   * const workspaceMember = await prisma.workspaceMember.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends WorkspaceMemberFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, WorkspaceMemberFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__WorkspaceMemberClient<runtime.Types.Result.GetResult<Prisma.$WorkspaceMemberPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first WorkspaceMember that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkspaceMemberFindFirstArgs} args - Arguments to find a WorkspaceMember
   * @example
   * // Get one WorkspaceMember
   * const workspaceMember = await prisma.workspaceMember.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends WorkspaceMemberFindFirstArgs>(args?: Prisma.SelectSubset<T, WorkspaceMemberFindFirstArgs<ExtArgs>>): Prisma.Prisma__WorkspaceMemberClient<runtime.Types.Result.GetResult<Prisma.$WorkspaceMemberPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first WorkspaceMember that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkspaceMemberFindFirstOrThrowArgs} args - Arguments to find a WorkspaceMember
   * @example
   * // Get one WorkspaceMember
   * const workspaceMember = await prisma.workspaceMember.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends WorkspaceMemberFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, WorkspaceMemberFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__WorkspaceMemberClient<runtime.Types.Result.GetResult<Prisma.$WorkspaceMemberPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more WorkspaceMembers that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkspaceMemberFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all WorkspaceMembers
   * const workspaceMembers = await prisma.workspaceMember.findMany()
   * 
   * // Get first 10 WorkspaceMembers
   * const workspaceMembers = await prisma.workspaceMember.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const workspaceMemberWithIdOnly = await prisma.workspaceMember.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends WorkspaceMemberFindManyArgs>(args?: Prisma.SelectSubset<T, WorkspaceMemberFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WorkspaceMemberPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a WorkspaceMember.
   * @param {WorkspaceMemberCreateArgs} args - Arguments to create a WorkspaceMember.
   * @example
   * // Create one WorkspaceMember
   * const WorkspaceMember = await prisma.workspaceMember.create({
   *   data: {
   *     // ... data to create a WorkspaceMember
   *   }
   * })
   * 
   */
  create<T extends WorkspaceMemberCreateArgs>(args: Prisma.SelectSubset<T, WorkspaceMemberCreateArgs<ExtArgs>>): Prisma.Prisma__WorkspaceMemberClient<runtime.Types.Result.GetResult<Prisma.$WorkspaceMemberPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many WorkspaceMembers.
   * @param {WorkspaceMemberCreateManyArgs} args - Arguments to create many WorkspaceMembers.
   * @example
   * // Create many WorkspaceMembers
   * const workspaceMember = await prisma.workspaceMember.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends WorkspaceMemberCreateManyArgs>(args?: Prisma.SelectSubset<T, WorkspaceMemberCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many WorkspaceMembers and returns the data saved in the database.
   * @param {WorkspaceMemberCreateManyAndReturnArgs} args - Arguments to create many WorkspaceMembers.
   * @example
   * // Create many WorkspaceMembers
   * const workspaceMember = await prisma.workspaceMember.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many WorkspaceMembers and only return the `id`
   * const workspaceMemberWithIdOnly = await prisma.workspaceMember.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends WorkspaceMemberCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, WorkspaceMemberCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WorkspaceMemberPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a WorkspaceMember.
   * @param {WorkspaceMemberDeleteArgs} args - Arguments to delete one WorkspaceMember.
   * @example
   * // Delete one WorkspaceMember
   * const WorkspaceMember = await prisma.workspaceMember.delete({
   *   where: {
   *     // ... filter to delete one WorkspaceMember
   *   }
   * })
   * 
   */
  delete<T extends WorkspaceMemberDeleteArgs>(args: Prisma.SelectSubset<T, WorkspaceMemberDeleteArgs<ExtArgs>>): Prisma.Prisma__WorkspaceMemberClient<runtime.Types.Result.GetResult<Prisma.$WorkspaceMemberPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one WorkspaceMember.
   * @param {WorkspaceMemberUpdateArgs} args - Arguments to update one WorkspaceMember.
   * @example
   * // Update one WorkspaceMember
   * const workspaceMember = await prisma.workspaceMember.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends WorkspaceMemberUpdateArgs>(args: Prisma.SelectSubset<T, WorkspaceMemberUpdateArgs<ExtArgs>>): Prisma.Prisma__WorkspaceMemberClient<runtime.Types.Result.GetResult<Prisma.$WorkspaceMemberPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more WorkspaceMembers.
   * @param {WorkspaceMemberDeleteManyArgs} args - Arguments to filter WorkspaceMembers to delete.
   * @example
   * // Delete a few WorkspaceMembers
   * const { count } = await prisma.workspaceMember.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends WorkspaceMemberDeleteManyArgs>(args?: Prisma.SelectSubset<T, WorkspaceMemberDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more WorkspaceMembers.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkspaceMemberUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many WorkspaceMembers
   * const workspaceMember = await prisma.workspaceMember.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends WorkspaceMemberUpdateManyArgs>(args: Prisma.SelectSubset<T, WorkspaceMemberUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more WorkspaceMembers and returns the data updated in the database.
   * @param {WorkspaceMemberUpdateManyAndReturnArgs} args - Arguments to update many WorkspaceMembers.
   * @example
   * // Update many WorkspaceMembers
   * const workspaceMember = await prisma.workspaceMember.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more WorkspaceMembers and only return the `id`
   * const workspaceMemberWithIdOnly = await prisma.workspaceMember.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends WorkspaceMemberUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, WorkspaceMemberUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WorkspaceMemberPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one WorkspaceMember.
   * @param {WorkspaceMemberUpsertArgs} args - Arguments to update or create a WorkspaceMember.
   * @example
   * // Update or create a WorkspaceMember
   * const workspaceMember = await prisma.workspaceMember.upsert({
   *   create: {
   *     // ... data to create a WorkspaceMember
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the WorkspaceMember we want to update
   *   }
   * })
   */
  upsert<T extends WorkspaceMemberUpsertArgs>(args: Prisma.SelectSubset<T, WorkspaceMemberUpsertArgs<ExtArgs>>): Prisma.Prisma__WorkspaceMemberClient<runtime.Types.Result.GetResult<Prisma.$WorkspaceMemberPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of WorkspaceMembers.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkspaceMemberCountArgs} args - Arguments to filter WorkspaceMembers to count.
   * @example
   * // Count the number of WorkspaceMembers
   * const count = await prisma.workspaceMember.count({
   *   where: {
   *     // ... the filter for the WorkspaceMembers we want to count
   *   }
   * })
  **/
  count<T extends WorkspaceMemberCountArgs>(
    args?: Prisma.Subset<T, WorkspaceMemberCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], WorkspaceMemberCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a WorkspaceMember.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkspaceMemberAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends WorkspaceMemberAggregateArgs>(args: Prisma.Subset<T, WorkspaceMemberAggregateArgs>): Prisma.PrismaPromise<GetWorkspaceMemberAggregateType<T>>

  /**
   * Group by WorkspaceMember.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkspaceMemberGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends WorkspaceMemberGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: WorkspaceMemberGroupByArgs['orderBy'] }
      : { orderBy?: WorkspaceMemberGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, WorkspaceMemberGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWorkspaceMemberGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the WorkspaceMember model
 */
readonly fields: WorkspaceMemberFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for WorkspaceMember.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__WorkspaceMemberClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  workspace<T extends Prisma.WorkspaceDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.WorkspaceDefaultArgs<ExtArgs>>): Prisma.Prisma__WorkspaceClient<runtime.Types.Result.GetResult<Prisma.$WorkspacePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the WorkspaceMember model
 */
export interface WorkspaceMemberFieldRefs {
  readonly id: Prisma.FieldRef<"WorkspaceMember", 'String'>
  readonly workspaceId: Prisma.FieldRef<"WorkspaceMember", 'String'>
  readonly userId: Prisma.FieldRef<"WorkspaceMember", 'String'>
  readonly role: Prisma.FieldRef<"WorkspaceMember", 'WorkspaceRole'>
  readonly joinedAt: Prisma.FieldRef<"WorkspaceMember", 'DateTime'>
}
    

// Custom InputTypes
/**
 * WorkspaceMember findUnique
 */
export type WorkspaceMemberFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkspaceMember
   */
  select?: Prisma.WorkspaceMemberSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkspaceMember
   */
  omit?: Prisma.WorkspaceMemberOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkspaceMemberInclude<ExtArgs> | null
  /**
   * Filter, which WorkspaceMember to fetch.
   */
  where: Prisma.WorkspaceMemberWhereUniqueInput
}

/**
 * WorkspaceMember findUniqueOrThrow
 */
export type WorkspaceMemberFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkspaceMember
   */
  select?: Prisma.WorkspaceMemberSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkspaceMember
   */
  omit?: Prisma.WorkspaceMemberOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkspaceMemberInclude<ExtArgs> | null
  /**
   * Filter, which WorkspaceMember to fetch.
   */
  where: Prisma.WorkspaceMemberWhereUniqueInput
}

/**
 * WorkspaceMember findFirst
 */
export type WorkspaceMemberFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkspaceMember
   */
  select?: Prisma.WorkspaceMemberSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkspaceMember
   */
  omit?: Prisma.WorkspaceMemberOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkspaceMemberInclude<ExtArgs> | null
  /**
   * Filter, which WorkspaceMember to fetch.
   */
  where?: Prisma.WorkspaceMemberWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of WorkspaceMembers to fetch.
   */
  orderBy?: Prisma.WorkspaceMemberOrderByWithRelationInput | Prisma.WorkspaceMemberOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for WorkspaceMembers.
   */
  cursor?: Prisma.WorkspaceMemberWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` WorkspaceMembers from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` WorkspaceMembers.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of WorkspaceMembers.
   */
  distinct?: Prisma.WorkspaceMemberScalarFieldEnum | Prisma.WorkspaceMemberScalarFieldEnum[]
}

/**
 * WorkspaceMember findFirstOrThrow
 */
export type WorkspaceMemberFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkspaceMember
   */
  select?: Prisma.WorkspaceMemberSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkspaceMember
   */
  omit?: Prisma.WorkspaceMemberOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkspaceMemberInclude<ExtArgs> | null
  /**
   * Filter, which WorkspaceMember to fetch.
   */
  where?: Prisma.WorkspaceMemberWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of WorkspaceMembers to fetch.
   */
  orderBy?: Prisma.WorkspaceMemberOrderByWithRelationInput | Prisma.WorkspaceMemberOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for WorkspaceMembers.
   */
  cursor?: Prisma.WorkspaceMemberWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` WorkspaceMembers from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` WorkspaceMembers.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of WorkspaceMembers.
   */
  distinct?: Prisma.WorkspaceMemberScalarFieldEnum | Prisma.WorkspaceMemberScalarFieldEnum[]
}

/**
 * WorkspaceMember findMany
 */
export type WorkspaceMemberFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkspaceMember
   */
  select?: Prisma.WorkspaceMemberSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkspaceMember
   */
  omit?: Prisma.WorkspaceMemberOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkspaceMemberInclude<ExtArgs> | null
  /**
   * Filter, which WorkspaceMembers to fetch.
   */
  where?: Prisma.WorkspaceMemberWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of WorkspaceMembers to fetch.
   */
  orderBy?: Prisma.WorkspaceMemberOrderByWithRelationInput | Prisma.WorkspaceMemberOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing WorkspaceMembers.
   */
  cursor?: Prisma.WorkspaceMemberWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` WorkspaceMembers from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` WorkspaceMembers.
   */
  skip?: number
  distinct?: Prisma.WorkspaceMemberScalarFieldEnum | Prisma.WorkspaceMemberScalarFieldEnum[]
}

/**
 * WorkspaceMember create
 */
export type WorkspaceMemberCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkspaceMember
   */
  select?: Prisma.WorkspaceMemberSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkspaceMember
   */
  omit?: Prisma.WorkspaceMemberOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkspaceMemberInclude<ExtArgs> | null
  /**
   * The data needed to create a WorkspaceMember.
   */
  data: Prisma.XOR<Prisma.WorkspaceMemberCreateInput, Prisma.WorkspaceMemberUncheckedCreateInput>
}

/**
 * WorkspaceMember createMany
 */
export type WorkspaceMemberCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many WorkspaceMembers.
   */
  data: Prisma.WorkspaceMemberCreateManyInput | Prisma.WorkspaceMemberCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * WorkspaceMember createManyAndReturn
 */
export type WorkspaceMemberCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkspaceMember
   */
  select?: Prisma.WorkspaceMemberSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the WorkspaceMember
   */
  omit?: Prisma.WorkspaceMemberOmit<ExtArgs> | null
  /**
   * The data used to create many WorkspaceMembers.
   */
  data: Prisma.WorkspaceMemberCreateManyInput | Prisma.WorkspaceMemberCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkspaceMemberIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * WorkspaceMember update
 */
export type WorkspaceMemberUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkspaceMember
   */
  select?: Prisma.WorkspaceMemberSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkspaceMember
   */
  omit?: Prisma.WorkspaceMemberOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkspaceMemberInclude<ExtArgs> | null
  /**
   * The data needed to update a WorkspaceMember.
   */
  data: Prisma.XOR<Prisma.WorkspaceMemberUpdateInput, Prisma.WorkspaceMemberUncheckedUpdateInput>
  /**
   * Choose, which WorkspaceMember to update.
   */
  where: Prisma.WorkspaceMemberWhereUniqueInput
}

/**
 * WorkspaceMember updateMany
 */
export type WorkspaceMemberUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update WorkspaceMembers.
   */
  data: Prisma.XOR<Prisma.WorkspaceMemberUpdateManyMutationInput, Prisma.WorkspaceMemberUncheckedUpdateManyInput>
  /**
   * Filter which WorkspaceMembers to update
   */
  where?: Prisma.WorkspaceMemberWhereInput
  /**
   * Limit how many WorkspaceMembers to update.
   */
  limit?: number
}

/**
 * WorkspaceMember updateManyAndReturn
 */
export type WorkspaceMemberUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkspaceMember
   */
  select?: Prisma.WorkspaceMemberSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the WorkspaceMember
   */
  omit?: Prisma.WorkspaceMemberOmit<ExtArgs> | null
  /**
   * The data used to update WorkspaceMembers.
   */
  data: Prisma.XOR<Prisma.WorkspaceMemberUpdateManyMutationInput, Prisma.WorkspaceMemberUncheckedUpdateManyInput>
  /**
   * Filter which WorkspaceMembers to update
   */
  where?: Prisma.WorkspaceMemberWhereInput
  /**
   * Limit how many WorkspaceMembers to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkspaceMemberIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * WorkspaceMember upsert
 */
export type WorkspaceMemberUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkspaceMember
   */
  select?: Prisma.WorkspaceMemberSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkspaceMember
   */
  omit?: Prisma.WorkspaceMemberOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkspaceMemberInclude<ExtArgs> | null
  /**
   * The filter to search for the WorkspaceMember to update in case it exists.
   */
  where: Prisma.WorkspaceMemberWhereUniqueInput
  /**
   * In case the WorkspaceMember found by the `where` argument doesn't exist, create a new WorkspaceMember with this data.
   */
  create: Prisma.XOR<Prisma.WorkspaceMemberCreateInput, Prisma.WorkspaceMemberUncheckedCreateInput>
  /**
   * In case the WorkspaceMember was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.WorkspaceMemberUpdateInput, Prisma.WorkspaceMemberUncheckedUpdateInput>
}

/**
 * WorkspaceMember delete
 */
export type WorkspaceMemberDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkspaceMember
   */
  select?: Prisma.WorkspaceMemberSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkspaceMember
   */
  omit?: Prisma.WorkspaceMemberOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkspaceMemberInclude<ExtArgs> | null
  /**
   * Filter which WorkspaceMember to delete.
   */
  where: Prisma.WorkspaceMemberWhereUniqueInput
}

/**
 * WorkspaceMember deleteMany
 */
export type WorkspaceMemberDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which WorkspaceMembers to delete
   */
  where?: Prisma.WorkspaceMemberWhereInput
  /**
   * Limit how many WorkspaceMembers to delete.
   */
  limit?: number
}

/**
 * WorkspaceMember without action
 */
export type WorkspaceMemberDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkspaceMember
   */
  select?: Prisma.WorkspaceMemberSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkspaceMember
   */
  omit?: Prisma.WorkspaceMemberOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkspaceMemberInclude<ExtArgs> | null
}
