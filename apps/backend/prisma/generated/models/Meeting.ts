
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `Meeting` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Meeting
 * 
 */
export type MeetingModel = runtime.Types.Result.DefaultSelection<Prisma.$MeetingPayload>

export type AggregateMeeting = {
  _count: MeetingCountAggregateOutputType | null
  _avg: MeetingAvgAggregateOutputType | null
  _sum: MeetingSumAggregateOutputType | null
  _min: MeetingMinAggregateOutputType | null
  _max: MeetingMaxAggregateOutputType | null
}

export type MeetingAvgAggregateOutputType = {
  duration: number | null
}

export type MeetingSumAggregateOutputType = {
  duration: number | null
}

export type MeetingMinAggregateOutputType = {
  id: string | null
  title: string | null
  description: string | null
  scheduledAt: Date | null
  duration: number | null
  status: $Enums.MeetingStatus | null
  userId: string | null
  workspaceId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type MeetingMaxAggregateOutputType = {
  id: string | null
  title: string | null
  description: string | null
  scheduledAt: Date | null
  duration: number | null
  status: $Enums.MeetingStatus | null
  userId: string | null
  workspaceId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type MeetingCountAggregateOutputType = {
  id: number
  title: number
  description: number
  scheduledAt: number
  duration: number
  status: number
  userId: number
  workspaceId: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type MeetingAvgAggregateInputType = {
  duration?: true
}

export type MeetingSumAggregateInputType = {
  duration?: true
}

export type MeetingMinAggregateInputType = {
  id?: true
  title?: true
  description?: true
  scheduledAt?: true
  duration?: true
  status?: true
  userId?: true
  workspaceId?: true
  createdAt?: true
  updatedAt?: true
}

export type MeetingMaxAggregateInputType = {
  id?: true
  title?: true
  description?: true
  scheduledAt?: true
  duration?: true
  status?: true
  userId?: true
  workspaceId?: true
  createdAt?: true
  updatedAt?: true
}

export type MeetingCountAggregateInputType = {
  id?: true
  title?: true
  description?: true
  scheduledAt?: true
  duration?: true
  status?: true
  userId?: true
  workspaceId?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type MeetingAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Meeting to aggregate.
   */
  where?: Prisma.MeetingWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Meetings to fetch.
   */
  orderBy?: Prisma.MeetingOrderByWithRelationInput | Prisma.MeetingOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.MeetingWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Meetings from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Meetings.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Meetings
  **/
  _count?: true | MeetingCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: MeetingAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: MeetingSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: MeetingMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: MeetingMaxAggregateInputType
}

export type GetMeetingAggregateType<T extends MeetingAggregateArgs> = {
      [P in keyof T & keyof AggregateMeeting]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateMeeting[P]>
    : Prisma.GetScalarType<T[P], AggregateMeeting[P]>
}




export type MeetingGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MeetingWhereInput
  orderBy?: Prisma.MeetingOrderByWithAggregationInput | Prisma.MeetingOrderByWithAggregationInput[]
  by: Prisma.MeetingScalarFieldEnum[] | Prisma.MeetingScalarFieldEnum
  having?: Prisma.MeetingScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: MeetingCountAggregateInputType | true
  _avg?: MeetingAvgAggregateInputType
  _sum?: MeetingSumAggregateInputType
  _min?: MeetingMinAggregateInputType
  _max?: MeetingMaxAggregateInputType
}

export type MeetingGroupByOutputType = {
  id: string
  title: string
  description: string | null
  scheduledAt: Date | null
  duration: number | null
  status: $Enums.MeetingStatus
  userId: string
  workspaceId: string | null
  createdAt: Date
  updatedAt: Date
  _count: MeetingCountAggregateOutputType | null
  _avg: MeetingAvgAggregateOutputType | null
  _sum: MeetingSumAggregateOutputType | null
  _min: MeetingMinAggregateOutputType | null
  _max: MeetingMaxAggregateOutputType | null
}

type GetMeetingGroupByPayload<T extends MeetingGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<MeetingGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof MeetingGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], MeetingGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], MeetingGroupByOutputType[P]>
      }
    >
  > 



export type MeetingWhereInput = {
  AND?: Prisma.MeetingWhereInput | Prisma.MeetingWhereInput[]
  OR?: Prisma.MeetingWhereInput[]
  NOT?: Prisma.MeetingWhereInput | Prisma.MeetingWhereInput[]
  id?: Prisma.StringFilter<"Meeting"> | string
  title?: Prisma.StringFilter<"Meeting"> | string
  description?: Prisma.StringNullableFilter<"Meeting"> | string | null
  scheduledAt?: Prisma.DateTimeNullableFilter<"Meeting"> | Date | string | null
  duration?: Prisma.IntNullableFilter<"Meeting"> | number | null
  status?: Prisma.EnumMeetingStatusFilter<"Meeting"> | $Enums.MeetingStatus
  userId?: Prisma.StringFilter<"Meeting"> | string
  workspaceId?: Prisma.StringNullableFilter<"Meeting"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Meeting"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Meeting"> | Date | string
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  workspace?: Prisma.XOR<Prisma.WorkspaceNullableScalarRelationFilter, Prisma.WorkspaceWhereInput> | null
  participants?: Prisma.MeetingParticipantListRelationFilter
  files?: Prisma.MeetingFileListRelationFilter
  transcript?: Prisma.XOR<Prisma.MeetingTranscriptNullableScalarRelationFilter, Prisma.MeetingTranscriptWhereInput> | null
  summary?: Prisma.XOR<Prisma.SummaryNullableScalarRelationFilter, Prisma.SummaryWhereInput> | null
  actionItems?: Prisma.ActionItemListRelationFilter
  topics?: Prisma.TopicListRelationFilter
  comments?: Prisma.CommentListRelationFilter
  tags?: Prisma.MeetingTagListRelationFilter
}

export type MeetingOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  scheduledAt?: Prisma.SortOrderInput | Prisma.SortOrder
  duration?: Prisma.SortOrderInput | Prisma.SortOrder
  status?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  workspaceId?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  user?: Prisma.UserOrderByWithRelationInput
  workspace?: Prisma.WorkspaceOrderByWithRelationInput
  participants?: Prisma.MeetingParticipantOrderByRelationAggregateInput
  files?: Prisma.MeetingFileOrderByRelationAggregateInput
  transcript?: Prisma.MeetingTranscriptOrderByWithRelationInput
  summary?: Prisma.SummaryOrderByWithRelationInput
  actionItems?: Prisma.ActionItemOrderByRelationAggregateInput
  topics?: Prisma.TopicOrderByRelationAggregateInput
  comments?: Prisma.CommentOrderByRelationAggregateInput
  tags?: Prisma.MeetingTagOrderByRelationAggregateInput
}

export type MeetingWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.MeetingWhereInput | Prisma.MeetingWhereInput[]
  OR?: Prisma.MeetingWhereInput[]
  NOT?: Prisma.MeetingWhereInput | Prisma.MeetingWhereInput[]
  title?: Prisma.StringFilter<"Meeting"> | string
  description?: Prisma.StringNullableFilter<"Meeting"> | string | null
  scheduledAt?: Prisma.DateTimeNullableFilter<"Meeting"> | Date | string | null
  duration?: Prisma.IntNullableFilter<"Meeting"> | number | null
  status?: Prisma.EnumMeetingStatusFilter<"Meeting"> | $Enums.MeetingStatus
  userId?: Prisma.StringFilter<"Meeting"> | string
  workspaceId?: Prisma.StringNullableFilter<"Meeting"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Meeting"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Meeting"> | Date | string
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  workspace?: Prisma.XOR<Prisma.WorkspaceNullableScalarRelationFilter, Prisma.WorkspaceWhereInput> | null
  participants?: Prisma.MeetingParticipantListRelationFilter
  files?: Prisma.MeetingFileListRelationFilter
  transcript?: Prisma.XOR<Prisma.MeetingTranscriptNullableScalarRelationFilter, Prisma.MeetingTranscriptWhereInput> | null
  summary?: Prisma.XOR<Prisma.SummaryNullableScalarRelationFilter, Prisma.SummaryWhereInput> | null
  actionItems?: Prisma.ActionItemListRelationFilter
  topics?: Prisma.TopicListRelationFilter
  comments?: Prisma.CommentListRelationFilter
  tags?: Prisma.MeetingTagListRelationFilter
}, "id">

export type MeetingOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  scheduledAt?: Prisma.SortOrderInput | Prisma.SortOrder
  duration?: Prisma.SortOrderInput | Prisma.SortOrder
  status?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  workspaceId?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.MeetingCountOrderByAggregateInput
  _avg?: Prisma.MeetingAvgOrderByAggregateInput
  _max?: Prisma.MeetingMaxOrderByAggregateInput
  _min?: Prisma.MeetingMinOrderByAggregateInput
  _sum?: Prisma.MeetingSumOrderByAggregateInput
}

export type MeetingScalarWhereWithAggregatesInput = {
  AND?: Prisma.MeetingScalarWhereWithAggregatesInput | Prisma.MeetingScalarWhereWithAggregatesInput[]
  OR?: Prisma.MeetingScalarWhereWithAggregatesInput[]
  NOT?: Prisma.MeetingScalarWhereWithAggregatesInput | Prisma.MeetingScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Meeting"> | string
  title?: Prisma.StringWithAggregatesFilter<"Meeting"> | string
  description?: Prisma.StringNullableWithAggregatesFilter<"Meeting"> | string | null
  scheduledAt?: Prisma.DateTimeNullableWithAggregatesFilter<"Meeting"> | Date | string | null
  duration?: Prisma.IntNullableWithAggregatesFilter<"Meeting"> | number | null
  status?: Prisma.EnumMeetingStatusWithAggregatesFilter<"Meeting"> | $Enums.MeetingStatus
  userId?: Prisma.StringWithAggregatesFilter<"Meeting"> | string
  workspaceId?: Prisma.StringNullableWithAggregatesFilter<"Meeting"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Meeting"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Meeting"> | Date | string
}

export type MeetingCreateInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt?: Date | string | null
  duration?: number | null
  status?: $Enums.MeetingStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutMeetingsInput
  workspace?: Prisma.WorkspaceCreateNestedOneWithoutMeetingsInput
  participants?: Prisma.MeetingParticipantCreateNestedManyWithoutMeetingInput
  files?: Prisma.MeetingFileCreateNestedManyWithoutMeetingInput
  transcript?: Prisma.MeetingTranscriptCreateNestedOneWithoutMeetingInput
  summary?: Prisma.SummaryCreateNestedOneWithoutMeetingInput
  actionItems?: Prisma.ActionItemCreateNestedManyWithoutMeetingInput
  topics?: Prisma.TopicCreateNestedManyWithoutMeetingInput
  comments?: Prisma.CommentCreateNestedManyWithoutMeetingInput
  tags?: Prisma.MeetingTagCreateNestedManyWithoutMeetingInput
}

export type MeetingUncheckedCreateInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt?: Date | string | null
  duration?: number | null
  status?: $Enums.MeetingStatus
  userId: string
  workspaceId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  participants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutMeetingInput
  files?: Prisma.MeetingFileUncheckedCreateNestedManyWithoutMeetingInput
  transcript?: Prisma.MeetingTranscriptUncheckedCreateNestedOneWithoutMeetingInput
  summary?: Prisma.SummaryUncheckedCreateNestedOneWithoutMeetingInput
  actionItems?: Prisma.ActionItemUncheckedCreateNestedManyWithoutMeetingInput
  topics?: Prisma.TopicUncheckedCreateNestedManyWithoutMeetingInput
  comments?: Prisma.CommentUncheckedCreateNestedManyWithoutMeetingInput
  tags?: Prisma.MeetingTagUncheckedCreateNestedManyWithoutMeetingInput
}

export type MeetingUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumMeetingStatusFieldUpdateOperationsInput | $Enums.MeetingStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutMeetingsNestedInput
  workspace?: Prisma.WorkspaceUpdateOneWithoutMeetingsNestedInput
  participants?: Prisma.MeetingParticipantUpdateManyWithoutMeetingNestedInput
  files?: Prisma.MeetingFileUpdateManyWithoutMeetingNestedInput
  transcript?: Prisma.MeetingTranscriptUpdateOneWithoutMeetingNestedInput
  summary?: Prisma.SummaryUpdateOneWithoutMeetingNestedInput
  actionItems?: Prisma.ActionItemUpdateManyWithoutMeetingNestedInput
  topics?: Prisma.TopicUpdateManyWithoutMeetingNestedInput
  comments?: Prisma.CommentUpdateManyWithoutMeetingNestedInput
  tags?: Prisma.MeetingTagUpdateManyWithoutMeetingNestedInput
}

export type MeetingUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumMeetingStatusFieldUpdateOperationsInput | $Enums.MeetingStatus
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  workspaceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  participants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutMeetingNestedInput
  files?: Prisma.MeetingFileUncheckedUpdateManyWithoutMeetingNestedInput
  transcript?: Prisma.MeetingTranscriptUncheckedUpdateOneWithoutMeetingNestedInput
  summary?: Prisma.SummaryUncheckedUpdateOneWithoutMeetingNestedInput
  actionItems?: Prisma.ActionItemUncheckedUpdateManyWithoutMeetingNestedInput
  topics?: Prisma.TopicUncheckedUpdateManyWithoutMeetingNestedInput
  comments?: Prisma.CommentUncheckedUpdateManyWithoutMeetingNestedInput
  tags?: Prisma.MeetingTagUncheckedUpdateManyWithoutMeetingNestedInput
}

export type MeetingCreateManyInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt?: Date | string | null
  duration?: number | null
  status?: $Enums.MeetingStatus
  userId: string
  workspaceId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MeetingUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumMeetingStatusFieldUpdateOperationsInput | $Enums.MeetingStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MeetingUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumMeetingStatusFieldUpdateOperationsInput | $Enums.MeetingStatus
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  workspaceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MeetingListRelationFilter = {
  every?: Prisma.MeetingWhereInput
  some?: Prisma.MeetingWhereInput
  none?: Prisma.MeetingWhereInput
}

export type MeetingOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type MeetingCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  scheduledAt?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  status?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  workspaceId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MeetingAvgOrderByAggregateInput = {
  duration?: Prisma.SortOrder
}

export type MeetingMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  scheduledAt?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  status?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  workspaceId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MeetingMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  scheduledAt?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  status?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  workspaceId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MeetingSumOrderByAggregateInput = {
  duration?: Prisma.SortOrder
}

export type MeetingScalarRelationFilter = {
  is?: Prisma.MeetingWhereInput
  isNot?: Prisma.MeetingWhereInput
}

export type MeetingCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.MeetingCreateWithoutUserInput, Prisma.MeetingUncheckedCreateWithoutUserInput> | Prisma.MeetingCreateWithoutUserInput[] | Prisma.MeetingUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutUserInput | Prisma.MeetingCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.MeetingCreateManyUserInputEnvelope
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
}

export type MeetingUncheckedCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.MeetingCreateWithoutUserInput, Prisma.MeetingUncheckedCreateWithoutUserInput> | Prisma.MeetingCreateWithoutUserInput[] | Prisma.MeetingUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutUserInput | Prisma.MeetingCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.MeetingCreateManyUserInputEnvelope
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
}

export type MeetingUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.MeetingCreateWithoutUserInput, Prisma.MeetingUncheckedCreateWithoutUserInput> | Prisma.MeetingCreateWithoutUserInput[] | Prisma.MeetingUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutUserInput | Prisma.MeetingCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.MeetingUpsertWithWhereUniqueWithoutUserInput | Prisma.MeetingUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.MeetingCreateManyUserInputEnvelope
  set?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  disconnect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  delete?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  update?: Prisma.MeetingUpdateWithWhereUniqueWithoutUserInput | Prisma.MeetingUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.MeetingUpdateManyWithWhereWithoutUserInput | Prisma.MeetingUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.MeetingScalarWhereInput | Prisma.MeetingScalarWhereInput[]
}

export type MeetingUncheckedUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.MeetingCreateWithoutUserInput, Prisma.MeetingUncheckedCreateWithoutUserInput> | Prisma.MeetingCreateWithoutUserInput[] | Prisma.MeetingUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutUserInput | Prisma.MeetingCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.MeetingUpsertWithWhereUniqueWithoutUserInput | Prisma.MeetingUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.MeetingCreateManyUserInputEnvelope
  set?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  disconnect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  delete?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  update?: Prisma.MeetingUpdateWithWhereUniqueWithoutUserInput | Prisma.MeetingUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.MeetingUpdateManyWithWhereWithoutUserInput | Prisma.MeetingUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.MeetingScalarWhereInput | Prisma.MeetingScalarWhereInput[]
}

export type MeetingCreateNestedManyWithoutWorkspaceInput = {
  create?: Prisma.XOR<Prisma.MeetingCreateWithoutWorkspaceInput, Prisma.MeetingUncheckedCreateWithoutWorkspaceInput> | Prisma.MeetingCreateWithoutWorkspaceInput[] | Prisma.MeetingUncheckedCreateWithoutWorkspaceInput[]
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutWorkspaceInput | Prisma.MeetingCreateOrConnectWithoutWorkspaceInput[]
  createMany?: Prisma.MeetingCreateManyWorkspaceInputEnvelope
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
}

export type MeetingUncheckedCreateNestedManyWithoutWorkspaceInput = {
  create?: Prisma.XOR<Prisma.MeetingCreateWithoutWorkspaceInput, Prisma.MeetingUncheckedCreateWithoutWorkspaceInput> | Prisma.MeetingCreateWithoutWorkspaceInput[] | Prisma.MeetingUncheckedCreateWithoutWorkspaceInput[]
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutWorkspaceInput | Prisma.MeetingCreateOrConnectWithoutWorkspaceInput[]
  createMany?: Prisma.MeetingCreateManyWorkspaceInputEnvelope
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
}

export type MeetingUpdateManyWithoutWorkspaceNestedInput = {
  create?: Prisma.XOR<Prisma.MeetingCreateWithoutWorkspaceInput, Prisma.MeetingUncheckedCreateWithoutWorkspaceInput> | Prisma.MeetingCreateWithoutWorkspaceInput[] | Prisma.MeetingUncheckedCreateWithoutWorkspaceInput[]
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutWorkspaceInput | Prisma.MeetingCreateOrConnectWithoutWorkspaceInput[]
  upsert?: Prisma.MeetingUpsertWithWhereUniqueWithoutWorkspaceInput | Prisma.MeetingUpsertWithWhereUniqueWithoutWorkspaceInput[]
  createMany?: Prisma.MeetingCreateManyWorkspaceInputEnvelope
  set?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  disconnect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  delete?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  update?: Prisma.MeetingUpdateWithWhereUniqueWithoutWorkspaceInput | Prisma.MeetingUpdateWithWhereUniqueWithoutWorkspaceInput[]
  updateMany?: Prisma.MeetingUpdateManyWithWhereWithoutWorkspaceInput | Prisma.MeetingUpdateManyWithWhereWithoutWorkspaceInput[]
  deleteMany?: Prisma.MeetingScalarWhereInput | Prisma.MeetingScalarWhereInput[]
}

export type MeetingUncheckedUpdateManyWithoutWorkspaceNestedInput = {
  create?: Prisma.XOR<Prisma.MeetingCreateWithoutWorkspaceInput, Prisma.MeetingUncheckedCreateWithoutWorkspaceInput> | Prisma.MeetingCreateWithoutWorkspaceInput[] | Prisma.MeetingUncheckedCreateWithoutWorkspaceInput[]
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutWorkspaceInput | Prisma.MeetingCreateOrConnectWithoutWorkspaceInput[]
  upsert?: Prisma.MeetingUpsertWithWhereUniqueWithoutWorkspaceInput | Prisma.MeetingUpsertWithWhereUniqueWithoutWorkspaceInput[]
  createMany?: Prisma.MeetingCreateManyWorkspaceInputEnvelope
  set?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  disconnect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  delete?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  update?: Prisma.MeetingUpdateWithWhereUniqueWithoutWorkspaceInput | Prisma.MeetingUpdateWithWhereUniqueWithoutWorkspaceInput[]
  updateMany?: Prisma.MeetingUpdateManyWithWhereWithoutWorkspaceInput | Prisma.MeetingUpdateManyWithWhereWithoutWorkspaceInput[]
  deleteMany?: Prisma.MeetingScalarWhereInput | Prisma.MeetingScalarWhereInput[]
}

export type NullableIntFieldUpdateOperationsInput = {
  set?: number | null
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type EnumMeetingStatusFieldUpdateOperationsInput = {
  set?: $Enums.MeetingStatus
}

export type MeetingCreateNestedOneWithoutParticipantsInput = {
  create?: Prisma.XOR<Prisma.MeetingCreateWithoutParticipantsInput, Prisma.MeetingUncheckedCreateWithoutParticipantsInput>
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutParticipantsInput
  connect?: Prisma.MeetingWhereUniqueInput
}

export type MeetingUpdateOneRequiredWithoutParticipantsNestedInput = {
  create?: Prisma.XOR<Prisma.MeetingCreateWithoutParticipantsInput, Prisma.MeetingUncheckedCreateWithoutParticipantsInput>
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutParticipantsInput
  upsert?: Prisma.MeetingUpsertWithoutParticipantsInput
  connect?: Prisma.MeetingWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MeetingUpdateToOneWithWhereWithoutParticipantsInput, Prisma.MeetingUpdateWithoutParticipantsInput>, Prisma.MeetingUncheckedUpdateWithoutParticipantsInput>
}

export type MeetingCreateNestedOneWithoutFilesInput = {
  create?: Prisma.XOR<Prisma.MeetingCreateWithoutFilesInput, Prisma.MeetingUncheckedCreateWithoutFilesInput>
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutFilesInput
  connect?: Prisma.MeetingWhereUniqueInput
}

export type MeetingUpdateOneRequiredWithoutFilesNestedInput = {
  create?: Prisma.XOR<Prisma.MeetingCreateWithoutFilesInput, Prisma.MeetingUncheckedCreateWithoutFilesInput>
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutFilesInput
  upsert?: Prisma.MeetingUpsertWithoutFilesInput
  connect?: Prisma.MeetingWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MeetingUpdateToOneWithWhereWithoutFilesInput, Prisma.MeetingUpdateWithoutFilesInput>, Prisma.MeetingUncheckedUpdateWithoutFilesInput>
}

export type MeetingCreateNestedOneWithoutTranscriptInput = {
  create?: Prisma.XOR<Prisma.MeetingCreateWithoutTranscriptInput, Prisma.MeetingUncheckedCreateWithoutTranscriptInput>
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutTranscriptInput
  connect?: Prisma.MeetingWhereUniqueInput
}

export type MeetingUpdateOneRequiredWithoutTranscriptNestedInput = {
  create?: Prisma.XOR<Prisma.MeetingCreateWithoutTranscriptInput, Prisma.MeetingUncheckedCreateWithoutTranscriptInput>
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutTranscriptInput
  upsert?: Prisma.MeetingUpsertWithoutTranscriptInput
  connect?: Prisma.MeetingWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MeetingUpdateToOneWithWhereWithoutTranscriptInput, Prisma.MeetingUpdateWithoutTranscriptInput>, Prisma.MeetingUncheckedUpdateWithoutTranscriptInput>
}

export type MeetingCreateNestedOneWithoutSummaryInput = {
  create?: Prisma.XOR<Prisma.MeetingCreateWithoutSummaryInput, Prisma.MeetingUncheckedCreateWithoutSummaryInput>
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutSummaryInput
  connect?: Prisma.MeetingWhereUniqueInput
}

export type MeetingUpdateOneRequiredWithoutSummaryNestedInput = {
  create?: Prisma.XOR<Prisma.MeetingCreateWithoutSummaryInput, Prisma.MeetingUncheckedCreateWithoutSummaryInput>
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutSummaryInput
  upsert?: Prisma.MeetingUpsertWithoutSummaryInput
  connect?: Prisma.MeetingWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MeetingUpdateToOneWithWhereWithoutSummaryInput, Prisma.MeetingUpdateWithoutSummaryInput>, Prisma.MeetingUncheckedUpdateWithoutSummaryInput>
}

export type MeetingCreateNestedOneWithoutActionItemsInput = {
  create?: Prisma.XOR<Prisma.MeetingCreateWithoutActionItemsInput, Prisma.MeetingUncheckedCreateWithoutActionItemsInput>
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutActionItemsInput
  connect?: Prisma.MeetingWhereUniqueInput
}

export type MeetingUpdateOneRequiredWithoutActionItemsNestedInput = {
  create?: Prisma.XOR<Prisma.MeetingCreateWithoutActionItemsInput, Prisma.MeetingUncheckedCreateWithoutActionItemsInput>
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutActionItemsInput
  upsert?: Prisma.MeetingUpsertWithoutActionItemsInput
  connect?: Prisma.MeetingWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MeetingUpdateToOneWithWhereWithoutActionItemsInput, Prisma.MeetingUpdateWithoutActionItemsInput>, Prisma.MeetingUncheckedUpdateWithoutActionItemsInput>
}

export type MeetingCreateNestedOneWithoutTopicsInput = {
  create?: Prisma.XOR<Prisma.MeetingCreateWithoutTopicsInput, Prisma.MeetingUncheckedCreateWithoutTopicsInput>
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutTopicsInput
  connect?: Prisma.MeetingWhereUniqueInput
}

export type MeetingUpdateOneRequiredWithoutTopicsNestedInput = {
  create?: Prisma.XOR<Prisma.MeetingCreateWithoutTopicsInput, Prisma.MeetingUncheckedCreateWithoutTopicsInput>
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutTopicsInput
  upsert?: Prisma.MeetingUpsertWithoutTopicsInput
  connect?: Prisma.MeetingWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MeetingUpdateToOneWithWhereWithoutTopicsInput, Prisma.MeetingUpdateWithoutTopicsInput>, Prisma.MeetingUncheckedUpdateWithoutTopicsInput>
}

export type MeetingCreateNestedOneWithoutCommentsInput = {
  create?: Prisma.XOR<Prisma.MeetingCreateWithoutCommentsInput, Prisma.MeetingUncheckedCreateWithoutCommentsInput>
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutCommentsInput
  connect?: Prisma.MeetingWhereUniqueInput
}

export type MeetingUpdateOneRequiredWithoutCommentsNestedInput = {
  create?: Prisma.XOR<Prisma.MeetingCreateWithoutCommentsInput, Prisma.MeetingUncheckedCreateWithoutCommentsInput>
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutCommentsInput
  upsert?: Prisma.MeetingUpsertWithoutCommentsInput
  connect?: Prisma.MeetingWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MeetingUpdateToOneWithWhereWithoutCommentsInput, Prisma.MeetingUpdateWithoutCommentsInput>, Prisma.MeetingUncheckedUpdateWithoutCommentsInput>
}

export type MeetingCreateNestedOneWithoutTagsInput = {
  create?: Prisma.XOR<Prisma.MeetingCreateWithoutTagsInput, Prisma.MeetingUncheckedCreateWithoutTagsInput>
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutTagsInput
  connect?: Prisma.MeetingWhereUniqueInput
}

export type MeetingUpdateOneRequiredWithoutTagsNestedInput = {
  create?: Prisma.XOR<Prisma.MeetingCreateWithoutTagsInput, Prisma.MeetingUncheckedCreateWithoutTagsInput>
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutTagsInput
  upsert?: Prisma.MeetingUpsertWithoutTagsInput
  connect?: Prisma.MeetingWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MeetingUpdateToOneWithWhereWithoutTagsInput, Prisma.MeetingUpdateWithoutTagsInput>, Prisma.MeetingUncheckedUpdateWithoutTagsInput>
}

export type MeetingCreateWithoutUserInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt?: Date | string | null
  duration?: number | null
  status?: $Enums.MeetingStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  workspace?: Prisma.WorkspaceCreateNestedOneWithoutMeetingsInput
  participants?: Prisma.MeetingParticipantCreateNestedManyWithoutMeetingInput
  files?: Prisma.MeetingFileCreateNestedManyWithoutMeetingInput
  transcript?: Prisma.MeetingTranscriptCreateNestedOneWithoutMeetingInput
  summary?: Prisma.SummaryCreateNestedOneWithoutMeetingInput
  actionItems?: Prisma.ActionItemCreateNestedManyWithoutMeetingInput
  topics?: Prisma.TopicCreateNestedManyWithoutMeetingInput
  comments?: Prisma.CommentCreateNestedManyWithoutMeetingInput
  tags?: Prisma.MeetingTagCreateNestedManyWithoutMeetingInput
}

export type MeetingUncheckedCreateWithoutUserInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt?: Date | string | null
  duration?: number | null
  status?: $Enums.MeetingStatus
  workspaceId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  participants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutMeetingInput
  files?: Prisma.MeetingFileUncheckedCreateNestedManyWithoutMeetingInput
  transcript?: Prisma.MeetingTranscriptUncheckedCreateNestedOneWithoutMeetingInput
  summary?: Prisma.SummaryUncheckedCreateNestedOneWithoutMeetingInput
  actionItems?: Prisma.ActionItemUncheckedCreateNestedManyWithoutMeetingInput
  topics?: Prisma.TopicUncheckedCreateNestedManyWithoutMeetingInput
  comments?: Prisma.CommentUncheckedCreateNestedManyWithoutMeetingInput
  tags?: Prisma.MeetingTagUncheckedCreateNestedManyWithoutMeetingInput
}

export type MeetingCreateOrConnectWithoutUserInput = {
  where: Prisma.MeetingWhereUniqueInput
  create: Prisma.XOR<Prisma.MeetingCreateWithoutUserInput, Prisma.MeetingUncheckedCreateWithoutUserInput>
}

export type MeetingCreateManyUserInputEnvelope = {
  data: Prisma.MeetingCreateManyUserInput | Prisma.MeetingCreateManyUserInput[]
  skipDuplicates?: boolean
}

export type MeetingUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.MeetingWhereUniqueInput
  update: Prisma.XOR<Prisma.MeetingUpdateWithoutUserInput, Prisma.MeetingUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.MeetingCreateWithoutUserInput, Prisma.MeetingUncheckedCreateWithoutUserInput>
}

export type MeetingUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.MeetingWhereUniqueInput
  data: Prisma.XOR<Prisma.MeetingUpdateWithoutUserInput, Prisma.MeetingUncheckedUpdateWithoutUserInput>
}

export type MeetingUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.MeetingScalarWhereInput
  data: Prisma.XOR<Prisma.MeetingUpdateManyMutationInput, Prisma.MeetingUncheckedUpdateManyWithoutUserInput>
}

export type MeetingScalarWhereInput = {
  AND?: Prisma.MeetingScalarWhereInput | Prisma.MeetingScalarWhereInput[]
  OR?: Prisma.MeetingScalarWhereInput[]
  NOT?: Prisma.MeetingScalarWhereInput | Prisma.MeetingScalarWhereInput[]
  id?: Prisma.StringFilter<"Meeting"> | string
  title?: Prisma.StringFilter<"Meeting"> | string
  description?: Prisma.StringNullableFilter<"Meeting"> | string | null
  scheduledAt?: Prisma.DateTimeNullableFilter<"Meeting"> | Date | string | null
  duration?: Prisma.IntNullableFilter<"Meeting"> | number | null
  status?: Prisma.EnumMeetingStatusFilter<"Meeting"> | $Enums.MeetingStatus
  userId?: Prisma.StringFilter<"Meeting"> | string
  workspaceId?: Prisma.StringNullableFilter<"Meeting"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Meeting"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Meeting"> | Date | string
}

export type MeetingCreateWithoutWorkspaceInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt?: Date | string | null
  duration?: number | null
  status?: $Enums.MeetingStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutMeetingsInput
  participants?: Prisma.MeetingParticipantCreateNestedManyWithoutMeetingInput
  files?: Prisma.MeetingFileCreateNestedManyWithoutMeetingInput
  transcript?: Prisma.MeetingTranscriptCreateNestedOneWithoutMeetingInput
  summary?: Prisma.SummaryCreateNestedOneWithoutMeetingInput
  actionItems?: Prisma.ActionItemCreateNestedManyWithoutMeetingInput
  topics?: Prisma.TopicCreateNestedManyWithoutMeetingInput
  comments?: Prisma.CommentCreateNestedManyWithoutMeetingInput
  tags?: Prisma.MeetingTagCreateNestedManyWithoutMeetingInput
}

export type MeetingUncheckedCreateWithoutWorkspaceInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt?: Date | string | null
  duration?: number | null
  status?: $Enums.MeetingStatus
  userId: string
  createdAt?: Date | string
  updatedAt?: Date | string
  participants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutMeetingInput
  files?: Prisma.MeetingFileUncheckedCreateNestedManyWithoutMeetingInput
  transcript?: Prisma.MeetingTranscriptUncheckedCreateNestedOneWithoutMeetingInput
  summary?: Prisma.SummaryUncheckedCreateNestedOneWithoutMeetingInput
  actionItems?: Prisma.ActionItemUncheckedCreateNestedManyWithoutMeetingInput
  topics?: Prisma.TopicUncheckedCreateNestedManyWithoutMeetingInput
  comments?: Prisma.CommentUncheckedCreateNestedManyWithoutMeetingInput
  tags?: Prisma.MeetingTagUncheckedCreateNestedManyWithoutMeetingInput
}

export type MeetingCreateOrConnectWithoutWorkspaceInput = {
  where: Prisma.MeetingWhereUniqueInput
  create: Prisma.XOR<Prisma.MeetingCreateWithoutWorkspaceInput, Prisma.MeetingUncheckedCreateWithoutWorkspaceInput>
}

export type MeetingCreateManyWorkspaceInputEnvelope = {
  data: Prisma.MeetingCreateManyWorkspaceInput | Prisma.MeetingCreateManyWorkspaceInput[]
  skipDuplicates?: boolean
}

export type MeetingUpsertWithWhereUniqueWithoutWorkspaceInput = {
  where: Prisma.MeetingWhereUniqueInput
  update: Prisma.XOR<Prisma.MeetingUpdateWithoutWorkspaceInput, Prisma.MeetingUncheckedUpdateWithoutWorkspaceInput>
  create: Prisma.XOR<Prisma.MeetingCreateWithoutWorkspaceInput, Prisma.MeetingUncheckedCreateWithoutWorkspaceInput>
}

export type MeetingUpdateWithWhereUniqueWithoutWorkspaceInput = {
  where: Prisma.MeetingWhereUniqueInput
  data: Prisma.XOR<Prisma.MeetingUpdateWithoutWorkspaceInput, Prisma.MeetingUncheckedUpdateWithoutWorkspaceInput>
}

export type MeetingUpdateManyWithWhereWithoutWorkspaceInput = {
  where: Prisma.MeetingScalarWhereInput
  data: Prisma.XOR<Prisma.MeetingUpdateManyMutationInput, Prisma.MeetingUncheckedUpdateManyWithoutWorkspaceInput>
}

export type MeetingCreateWithoutParticipantsInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt?: Date | string | null
  duration?: number | null
  status?: $Enums.MeetingStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutMeetingsInput
  workspace?: Prisma.WorkspaceCreateNestedOneWithoutMeetingsInput
  files?: Prisma.MeetingFileCreateNestedManyWithoutMeetingInput
  transcript?: Prisma.MeetingTranscriptCreateNestedOneWithoutMeetingInput
  summary?: Prisma.SummaryCreateNestedOneWithoutMeetingInput
  actionItems?: Prisma.ActionItemCreateNestedManyWithoutMeetingInput
  topics?: Prisma.TopicCreateNestedManyWithoutMeetingInput
  comments?: Prisma.CommentCreateNestedManyWithoutMeetingInput
  tags?: Prisma.MeetingTagCreateNestedManyWithoutMeetingInput
}

export type MeetingUncheckedCreateWithoutParticipantsInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt?: Date | string | null
  duration?: number | null
  status?: $Enums.MeetingStatus
  userId: string
  workspaceId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  files?: Prisma.MeetingFileUncheckedCreateNestedManyWithoutMeetingInput
  transcript?: Prisma.MeetingTranscriptUncheckedCreateNestedOneWithoutMeetingInput
  summary?: Prisma.SummaryUncheckedCreateNestedOneWithoutMeetingInput
  actionItems?: Prisma.ActionItemUncheckedCreateNestedManyWithoutMeetingInput
  topics?: Prisma.TopicUncheckedCreateNestedManyWithoutMeetingInput
  comments?: Prisma.CommentUncheckedCreateNestedManyWithoutMeetingInput
  tags?: Prisma.MeetingTagUncheckedCreateNestedManyWithoutMeetingInput
}

export type MeetingCreateOrConnectWithoutParticipantsInput = {
  where: Prisma.MeetingWhereUniqueInput
  create: Prisma.XOR<Prisma.MeetingCreateWithoutParticipantsInput, Prisma.MeetingUncheckedCreateWithoutParticipantsInput>
}

export type MeetingUpsertWithoutParticipantsInput = {
  update: Prisma.XOR<Prisma.MeetingUpdateWithoutParticipantsInput, Prisma.MeetingUncheckedUpdateWithoutParticipantsInput>
  create: Prisma.XOR<Prisma.MeetingCreateWithoutParticipantsInput, Prisma.MeetingUncheckedCreateWithoutParticipantsInput>
  where?: Prisma.MeetingWhereInput
}

export type MeetingUpdateToOneWithWhereWithoutParticipantsInput = {
  where?: Prisma.MeetingWhereInput
  data: Prisma.XOR<Prisma.MeetingUpdateWithoutParticipantsInput, Prisma.MeetingUncheckedUpdateWithoutParticipantsInput>
}

export type MeetingUpdateWithoutParticipantsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumMeetingStatusFieldUpdateOperationsInput | $Enums.MeetingStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutMeetingsNestedInput
  workspace?: Prisma.WorkspaceUpdateOneWithoutMeetingsNestedInput
  files?: Prisma.MeetingFileUpdateManyWithoutMeetingNestedInput
  transcript?: Prisma.MeetingTranscriptUpdateOneWithoutMeetingNestedInput
  summary?: Prisma.SummaryUpdateOneWithoutMeetingNestedInput
  actionItems?: Prisma.ActionItemUpdateManyWithoutMeetingNestedInput
  topics?: Prisma.TopicUpdateManyWithoutMeetingNestedInput
  comments?: Prisma.CommentUpdateManyWithoutMeetingNestedInput
  tags?: Prisma.MeetingTagUpdateManyWithoutMeetingNestedInput
}

export type MeetingUncheckedUpdateWithoutParticipantsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumMeetingStatusFieldUpdateOperationsInput | $Enums.MeetingStatus
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  workspaceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  files?: Prisma.MeetingFileUncheckedUpdateManyWithoutMeetingNestedInput
  transcript?: Prisma.MeetingTranscriptUncheckedUpdateOneWithoutMeetingNestedInput
  summary?: Prisma.SummaryUncheckedUpdateOneWithoutMeetingNestedInput
  actionItems?: Prisma.ActionItemUncheckedUpdateManyWithoutMeetingNestedInput
  topics?: Prisma.TopicUncheckedUpdateManyWithoutMeetingNestedInput
  comments?: Prisma.CommentUncheckedUpdateManyWithoutMeetingNestedInput
  tags?: Prisma.MeetingTagUncheckedUpdateManyWithoutMeetingNestedInput
}

export type MeetingCreateWithoutFilesInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt?: Date | string | null
  duration?: number | null
  status?: $Enums.MeetingStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutMeetingsInput
  workspace?: Prisma.WorkspaceCreateNestedOneWithoutMeetingsInput
  participants?: Prisma.MeetingParticipantCreateNestedManyWithoutMeetingInput
  transcript?: Prisma.MeetingTranscriptCreateNestedOneWithoutMeetingInput
  summary?: Prisma.SummaryCreateNestedOneWithoutMeetingInput
  actionItems?: Prisma.ActionItemCreateNestedManyWithoutMeetingInput
  topics?: Prisma.TopicCreateNestedManyWithoutMeetingInput
  comments?: Prisma.CommentCreateNestedManyWithoutMeetingInput
  tags?: Prisma.MeetingTagCreateNestedManyWithoutMeetingInput
}

export type MeetingUncheckedCreateWithoutFilesInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt?: Date | string | null
  duration?: number | null
  status?: $Enums.MeetingStatus
  userId: string
  workspaceId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  participants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutMeetingInput
  transcript?: Prisma.MeetingTranscriptUncheckedCreateNestedOneWithoutMeetingInput
  summary?: Prisma.SummaryUncheckedCreateNestedOneWithoutMeetingInput
  actionItems?: Prisma.ActionItemUncheckedCreateNestedManyWithoutMeetingInput
  topics?: Prisma.TopicUncheckedCreateNestedManyWithoutMeetingInput
  comments?: Prisma.CommentUncheckedCreateNestedManyWithoutMeetingInput
  tags?: Prisma.MeetingTagUncheckedCreateNestedManyWithoutMeetingInput
}

export type MeetingCreateOrConnectWithoutFilesInput = {
  where: Prisma.MeetingWhereUniqueInput
  create: Prisma.XOR<Prisma.MeetingCreateWithoutFilesInput, Prisma.MeetingUncheckedCreateWithoutFilesInput>
}

export type MeetingUpsertWithoutFilesInput = {
  update: Prisma.XOR<Prisma.MeetingUpdateWithoutFilesInput, Prisma.MeetingUncheckedUpdateWithoutFilesInput>
  create: Prisma.XOR<Prisma.MeetingCreateWithoutFilesInput, Prisma.MeetingUncheckedCreateWithoutFilesInput>
  where?: Prisma.MeetingWhereInput
}

export type MeetingUpdateToOneWithWhereWithoutFilesInput = {
  where?: Prisma.MeetingWhereInput
  data: Prisma.XOR<Prisma.MeetingUpdateWithoutFilesInput, Prisma.MeetingUncheckedUpdateWithoutFilesInput>
}

export type MeetingUpdateWithoutFilesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumMeetingStatusFieldUpdateOperationsInput | $Enums.MeetingStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutMeetingsNestedInput
  workspace?: Prisma.WorkspaceUpdateOneWithoutMeetingsNestedInput
  participants?: Prisma.MeetingParticipantUpdateManyWithoutMeetingNestedInput
  transcript?: Prisma.MeetingTranscriptUpdateOneWithoutMeetingNestedInput
  summary?: Prisma.SummaryUpdateOneWithoutMeetingNestedInput
  actionItems?: Prisma.ActionItemUpdateManyWithoutMeetingNestedInput
  topics?: Prisma.TopicUpdateManyWithoutMeetingNestedInput
  comments?: Prisma.CommentUpdateManyWithoutMeetingNestedInput
  tags?: Prisma.MeetingTagUpdateManyWithoutMeetingNestedInput
}

export type MeetingUncheckedUpdateWithoutFilesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumMeetingStatusFieldUpdateOperationsInput | $Enums.MeetingStatus
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  workspaceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  participants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutMeetingNestedInput
  transcript?: Prisma.MeetingTranscriptUncheckedUpdateOneWithoutMeetingNestedInput
  summary?: Prisma.SummaryUncheckedUpdateOneWithoutMeetingNestedInput
  actionItems?: Prisma.ActionItemUncheckedUpdateManyWithoutMeetingNestedInput
  topics?: Prisma.TopicUncheckedUpdateManyWithoutMeetingNestedInput
  comments?: Prisma.CommentUncheckedUpdateManyWithoutMeetingNestedInput
  tags?: Prisma.MeetingTagUncheckedUpdateManyWithoutMeetingNestedInput
}

export type MeetingCreateWithoutTranscriptInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt?: Date | string | null
  duration?: number | null
  status?: $Enums.MeetingStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutMeetingsInput
  workspace?: Prisma.WorkspaceCreateNestedOneWithoutMeetingsInput
  participants?: Prisma.MeetingParticipantCreateNestedManyWithoutMeetingInput
  files?: Prisma.MeetingFileCreateNestedManyWithoutMeetingInput
  summary?: Prisma.SummaryCreateNestedOneWithoutMeetingInput
  actionItems?: Prisma.ActionItemCreateNestedManyWithoutMeetingInput
  topics?: Prisma.TopicCreateNestedManyWithoutMeetingInput
  comments?: Prisma.CommentCreateNestedManyWithoutMeetingInput
  tags?: Prisma.MeetingTagCreateNestedManyWithoutMeetingInput
}

export type MeetingUncheckedCreateWithoutTranscriptInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt?: Date | string | null
  duration?: number | null
  status?: $Enums.MeetingStatus
  userId: string
  workspaceId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  participants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutMeetingInput
  files?: Prisma.MeetingFileUncheckedCreateNestedManyWithoutMeetingInput
  summary?: Prisma.SummaryUncheckedCreateNestedOneWithoutMeetingInput
  actionItems?: Prisma.ActionItemUncheckedCreateNestedManyWithoutMeetingInput
  topics?: Prisma.TopicUncheckedCreateNestedManyWithoutMeetingInput
  comments?: Prisma.CommentUncheckedCreateNestedManyWithoutMeetingInput
  tags?: Prisma.MeetingTagUncheckedCreateNestedManyWithoutMeetingInput
}

export type MeetingCreateOrConnectWithoutTranscriptInput = {
  where: Prisma.MeetingWhereUniqueInput
  create: Prisma.XOR<Prisma.MeetingCreateWithoutTranscriptInput, Prisma.MeetingUncheckedCreateWithoutTranscriptInput>
}

export type MeetingUpsertWithoutTranscriptInput = {
  update: Prisma.XOR<Prisma.MeetingUpdateWithoutTranscriptInput, Prisma.MeetingUncheckedUpdateWithoutTranscriptInput>
  create: Prisma.XOR<Prisma.MeetingCreateWithoutTranscriptInput, Prisma.MeetingUncheckedCreateWithoutTranscriptInput>
  where?: Prisma.MeetingWhereInput
}

export type MeetingUpdateToOneWithWhereWithoutTranscriptInput = {
  where?: Prisma.MeetingWhereInput
  data: Prisma.XOR<Prisma.MeetingUpdateWithoutTranscriptInput, Prisma.MeetingUncheckedUpdateWithoutTranscriptInput>
}

export type MeetingUpdateWithoutTranscriptInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumMeetingStatusFieldUpdateOperationsInput | $Enums.MeetingStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutMeetingsNestedInput
  workspace?: Prisma.WorkspaceUpdateOneWithoutMeetingsNestedInput
  participants?: Prisma.MeetingParticipantUpdateManyWithoutMeetingNestedInput
  files?: Prisma.MeetingFileUpdateManyWithoutMeetingNestedInput
  summary?: Prisma.SummaryUpdateOneWithoutMeetingNestedInput
  actionItems?: Prisma.ActionItemUpdateManyWithoutMeetingNestedInput
  topics?: Prisma.TopicUpdateManyWithoutMeetingNestedInput
  comments?: Prisma.CommentUpdateManyWithoutMeetingNestedInput
  tags?: Prisma.MeetingTagUpdateManyWithoutMeetingNestedInput
}

export type MeetingUncheckedUpdateWithoutTranscriptInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumMeetingStatusFieldUpdateOperationsInput | $Enums.MeetingStatus
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  workspaceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  participants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutMeetingNestedInput
  files?: Prisma.MeetingFileUncheckedUpdateManyWithoutMeetingNestedInput
  summary?: Prisma.SummaryUncheckedUpdateOneWithoutMeetingNestedInput
  actionItems?: Prisma.ActionItemUncheckedUpdateManyWithoutMeetingNestedInput
  topics?: Prisma.TopicUncheckedUpdateManyWithoutMeetingNestedInput
  comments?: Prisma.CommentUncheckedUpdateManyWithoutMeetingNestedInput
  tags?: Prisma.MeetingTagUncheckedUpdateManyWithoutMeetingNestedInput
}

export type MeetingCreateWithoutSummaryInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt?: Date | string | null
  duration?: number | null
  status?: $Enums.MeetingStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutMeetingsInput
  workspace?: Prisma.WorkspaceCreateNestedOneWithoutMeetingsInput
  participants?: Prisma.MeetingParticipantCreateNestedManyWithoutMeetingInput
  files?: Prisma.MeetingFileCreateNestedManyWithoutMeetingInput
  transcript?: Prisma.MeetingTranscriptCreateNestedOneWithoutMeetingInput
  actionItems?: Prisma.ActionItemCreateNestedManyWithoutMeetingInput
  topics?: Prisma.TopicCreateNestedManyWithoutMeetingInput
  comments?: Prisma.CommentCreateNestedManyWithoutMeetingInput
  tags?: Prisma.MeetingTagCreateNestedManyWithoutMeetingInput
}

export type MeetingUncheckedCreateWithoutSummaryInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt?: Date | string | null
  duration?: number | null
  status?: $Enums.MeetingStatus
  userId: string
  workspaceId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  participants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutMeetingInput
  files?: Prisma.MeetingFileUncheckedCreateNestedManyWithoutMeetingInput
  transcript?: Prisma.MeetingTranscriptUncheckedCreateNestedOneWithoutMeetingInput
  actionItems?: Prisma.ActionItemUncheckedCreateNestedManyWithoutMeetingInput
  topics?: Prisma.TopicUncheckedCreateNestedManyWithoutMeetingInput
  comments?: Prisma.CommentUncheckedCreateNestedManyWithoutMeetingInput
  tags?: Prisma.MeetingTagUncheckedCreateNestedManyWithoutMeetingInput
}

export type MeetingCreateOrConnectWithoutSummaryInput = {
  where: Prisma.MeetingWhereUniqueInput
  create: Prisma.XOR<Prisma.MeetingCreateWithoutSummaryInput, Prisma.MeetingUncheckedCreateWithoutSummaryInput>
}

export type MeetingUpsertWithoutSummaryInput = {
  update: Prisma.XOR<Prisma.MeetingUpdateWithoutSummaryInput, Prisma.MeetingUncheckedUpdateWithoutSummaryInput>
  create: Prisma.XOR<Prisma.MeetingCreateWithoutSummaryInput, Prisma.MeetingUncheckedCreateWithoutSummaryInput>
  where?: Prisma.MeetingWhereInput
}

export type MeetingUpdateToOneWithWhereWithoutSummaryInput = {
  where?: Prisma.MeetingWhereInput
  data: Prisma.XOR<Prisma.MeetingUpdateWithoutSummaryInput, Prisma.MeetingUncheckedUpdateWithoutSummaryInput>
}

export type MeetingUpdateWithoutSummaryInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumMeetingStatusFieldUpdateOperationsInput | $Enums.MeetingStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutMeetingsNestedInput
  workspace?: Prisma.WorkspaceUpdateOneWithoutMeetingsNestedInput
  participants?: Prisma.MeetingParticipantUpdateManyWithoutMeetingNestedInput
  files?: Prisma.MeetingFileUpdateManyWithoutMeetingNestedInput
  transcript?: Prisma.MeetingTranscriptUpdateOneWithoutMeetingNestedInput
  actionItems?: Prisma.ActionItemUpdateManyWithoutMeetingNestedInput
  topics?: Prisma.TopicUpdateManyWithoutMeetingNestedInput
  comments?: Prisma.CommentUpdateManyWithoutMeetingNestedInput
  tags?: Prisma.MeetingTagUpdateManyWithoutMeetingNestedInput
}

export type MeetingUncheckedUpdateWithoutSummaryInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumMeetingStatusFieldUpdateOperationsInput | $Enums.MeetingStatus
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  workspaceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  participants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutMeetingNestedInput
  files?: Prisma.MeetingFileUncheckedUpdateManyWithoutMeetingNestedInput
  transcript?: Prisma.MeetingTranscriptUncheckedUpdateOneWithoutMeetingNestedInput
  actionItems?: Prisma.ActionItemUncheckedUpdateManyWithoutMeetingNestedInput
  topics?: Prisma.TopicUncheckedUpdateManyWithoutMeetingNestedInput
  comments?: Prisma.CommentUncheckedUpdateManyWithoutMeetingNestedInput
  tags?: Prisma.MeetingTagUncheckedUpdateManyWithoutMeetingNestedInput
}

export type MeetingCreateWithoutActionItemsInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt?: Date | string | null
  duration?: number | null
  status?: $Enums.MeetingStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutMeetingsInput
  workspace?: Prisma.WorkspaceCreateNestedOneWithoutMeetingsInput
  participants?: Prisma.MeetingParticipantCreateNestedManyWithoutMeetingInput
  files?: Prisma.MeetingFileCreateNestedManyWithoutMeetingInput
  transcript?: Prisma.MeetingTranscriptCreateNestedOneWithoutMeetingInput
  summary?: Prisma.SummaryCreateNestedOneWithoutMeetingInput
  topics?: Prisma.TopicCreateNestedManyWithoutMeetingInput
  comments?: Prisma.CommentCreateNestedManyWithoutMeetingInput
  tags?: Prisma.MeetingTagCreateNestedManyWithoutMeetingInput
}

export type MeetingUncheckedCreateWithoutActionItemsInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt?: Date | string | null
  duration?: number | null
  status?: $Enums.MeetingStatus
  userId: string
  workspaceId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  participants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutMeetingInput
  files?: Prisma.MeetingFileUncheckedCreateNestedManyWithoutMeetingInput
  transcript?: Prisma.MeetingTranscriptUncheckedCreateNestedOneWithoutMeetingInput
  summary?: Prisma.SummaryUncheckedCreateNestedOneWithoutMeetingInput
  topics?: Prisma.TopicUncheckedCreateNestedManyWithoutMeetingInput
  comments?: Prisma.CommentUncheckedCreateNestedManyWithoutMeetingInput
  tags?: Prisma.MeetingTagUncheckedCreateNestedManyWithoutMeetingInput
}

export type MeetingCreateOrConnectWithoutActionItemsInput = {
  where: Prisma.MeetingWhereUniqueInput
  create: Prisma.XOR<Prisma.MeetingCreateWithoutActionItemsInput, Prisma.MeetingUncheckedCreateWithoutActionItemsInput>
}

export type MeetingUpsertWithoutActionItemsInput = {
  update: Prisma.XOR<Prisma.MeetingUpdateWithoutActionItemsInput, Prisma.MeetingUncheckedUpdateWithoutActionItemsInput>
  create: Prisma.XOR<Prisma.MeetingCreateWithoutActionItemsInput, Prisma.MeetingUncheckedCreateWithoutActionItemsInput>
  where?: Prisma.MeetingWhereInput
}

export type MeetingUpdateToOneWithWhereWithoutActionItemsInput = {
  where?: Prisma.MeetingWhereInput
  data: Prisma.XOR<Prisma.MeetingUpdateWithoutActionItemsInput, Prisma.MeetingUncheckedUpdateWithoutActionItemsInput>
}

export type MeetingUpdateWithoutActionItemsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumMeetingStatusFieldUpdateOperationsInput | $Enums.MeetingStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutMeetingsNestedInput
  workspace?: Prisma.WorkspaceUpdateOneWithoutMeetingsNestedInput
  participants?: Prisma.MeetingParticipantUpdateManyWithoutMeetingNestedInput
  files?: Prisma.MeetingFileUpdateManyWithoutMeetingNestedInput
  transcript?: Prisma.MeetingTranscriptUpdateOneWithoutMeetingNestedInput
  summary?: Prisma.SummaryUpdateOneWithoutMeetingNestedInput
  topics?: Prisma.TopicUpdateManyWithoutMeetingNestedInput
  comments?: Prisma.CommentUpdateManyWithoutMeetingNestedInput
  tags?: Prisma.MeetingTagUpdateManyWithoutMeetingNestedInput
}

export type MeetingUncheckedUpdateWithoutActionItemsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumMeetingStatusFieldUpdateOperationsInput | $Enums.MeetingStatus
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  workspaceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  participants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutMeetingNestedInput
  files?: Prisma.MeetingFileUncheckedUpdateManyWithoutMeetingNestedInput
  transcript?: Prisma.MeetingTranscriptUncheckedUpdateOneWithoutMeetingNestedInput
  summary?: Prisma.SummaryUncheckedUpdateOneWithoutMeetingNestedInput
  topics?: Prisma.TopicUncheckedUpdateManyWithoutMeetingNestedInput
  comments?: Prisma.CommentUncheckedUpdateManyWithoutMeetingNestedInput
  tags?: Prisma.MeetingTagUncheckedUpdateManyWithoutMeetingNestedInput
}

export type MeetingCreateWithoutTopicsInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt?: Date | string | null
  duration?: number | null
  status?: $Enums.MeetingStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutMeetingsInput
  workspace?: Prisma.WorkspaceCreateNestedOneWithoutMeetingsInput
  participants?: Prisma.MeetingParticipantCreateNestedManyWithoutMeetingInput
  files?: Prisma.MeetingFileCreateNestedManyWithoutMeetingInput
  transcript?: Prisma.MeetingTranscriptCreateNestedOneWithoutMeetingInput
  summary?: Prisma.SummaryCreateNestedOneWithoutMeetingInput
  actionItems?: Prisma.ActionItemCreateNestedManyWithoutMeetingInput
  comments?: Prisma.CommentCreateNestedManyWithoutMeetingInput
  tags?: Prisma.MeetingTagCreateNestedManyWithoutMeetingInput
}

export type MeetingUncheckedCreateWithoutTopicsInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt?: Date | string | null
  duration?: number | null
  status?: $Enums.MeetingStatus
  userId: string
  workspaceId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  participants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutMeetingInput
  files?: Prisma.MeetingFileUncheckedCreateNestedManyWithoutMeetingInput
  transcript?: Prisma.MeetingTranscriptUncheckedCreateNestedOneWithoutMeetingInput
  summary?: Prisma.SummaryUncheckedCreateNestedOneWithoutMeetingInput
  actionItems?: Prisma.ActionItemUncheckedCreateNestedManyWithoutMeetingInput
  comments?: Prisma.CommentUncheckedCreateNestedManyWithoutMeetingInput
  tags?: Prisma.MeetingTagUncheckedCreateNestedManyWithoutMeetingInput
}

export type MeetingCreateOrConnectWithoutTopicsInput = {
  where: Prisma.MeetingWhereUniqueInput
  create: Prisma.XOR<Prisma.MeetingCreateWithoutTopicsInput, Prisma.MeetingUncheckedCreateWithoutTopicsInput>
}

export type MeetingUpsertWithoutTopicsInput = {
  update: Prisma.XOR<Prisma.MeetingUpdateWithoutTopicsInput, Prisma.MeetingUncheckedUpdateWithoutTopicsInput>
  create: Prisma.XOR<Prisma.MeetingCreateWithoutTopicsInput, Prisma.MeetingUncheckedCreateWithoutTopicsInput>
  where?: Prisma.MeetingWhereInput
}

export type MeetingUpdateToOneWithWhereWithoutTopicsInput = {
  where?: Prisma.MeetingWhereInput
  data: Prisma.XOR<Prisma.MeetingUpdateWithoutTopicsInput, Prisma.MeetingUncheckedUpdateWithoutTopicsInput>
}

export type MeetingUpdateWithoutTopicsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumMeetingStatusFieldUpdateOperationsInput | $Enums.MeetingStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutMeetingsNestedInput
  workspace?: Prisma.WorkspaceUpdateOneWithoutMeetingsNestedInput
  participants?: Prisma.MeetingParticipantUpdateManyWithoutMeetingNestedInput
  files?: Prisma.MeetingFileUpdateManyWithoutMeetingNestedInput
  transcript?: Prisma.MeetingTranscriptUpdateOneWithoutMeetingNestedInput
  summary?: Prisma.SummaryUpdateOneWithoutMeetingNestedInput
  actionItems?: Prisma.ActionItemUpdateManyWithoutMeetingNestedInput
  comments?: Prisma.CommentUpdateManyWithoutMeetingNestedInput
  tags?: Prisma.MeetingTagUpdateManyWithoutMeetingNestedInput
}

export type MeetingUncheckedUpdateWithoutTopicsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumMeetingStatusFieldUpdateOperationsInput | $Enums.MeetingStatus
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  workspaceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  participants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutMeetingNestedInput
  files?: Prisma.MeetingFileUncheckedUpdateManyWithoutMeetingNestedInput
  transcript?: Prisma.MeetingTranscriptUncheckedUpdateOneWithoutMeetingNestedInput
  summary?: Prisma.SummaryUncheckedUpdateOneWithoutMeetingNestedInput
  actionItems?: Prisma.ActionItemUncheckedUpdateManyWithoutMeetingNestedInput
  comments?: Prisma.CommentUncheckedUpdateManyWithoutMeetingNestedInput
  tags?: Prisma.MeetingTagUncheckedUpdateManyWithoutMeetingNestedInput
}

export type MeetingCreateWithoutCommentsInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt?: Date | string | null
  duration?: number | null
  status?: $Enums.MeetingStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutMeetingsInput
  workspace?: Prisma.WorkspaceCreateNestedOneWithoutMeetingsInput
  participants?: Prisma.MeetingParticipantCreateNestedManyWithoutMeetingInput
  files?: Prisma.MeetingFileCreateNestedManyWithoutMeetingInput
  transcript?: Prisma.MeetingTranscriptCreateNestedOneWithoutMeetingInput
  summary?: Prisma.SummaryCreateNestedOneWithoutMeetingInput
  actionItems?: Prisma.ActionItemCreateNestedManyWithoutMeetingInput
  topics?: Prisma.TopicCreateNestedManyWithoutMeetingInput
  tags?: Prisma.MeetingTagCreateNestedManyWithoutMeetingInput
}

export type MeetingUncheckedCreateWithoutCommentsInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt?: Date | string | null
  duration?: number | null
  status?: $Enums.MeetingStatus
  userId: string
  workspaceId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  participants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutMeetingInput
  files?: Prisma.MeetingFileUncheckedCreateNestedManyWithoutMeetingInput
  transcript?: Prisma.MeetingTranscriptUncheckedCreateNestedOneWithoutMeetingInput
  summary?: Prisma.SummaryUncheckedCreateNestedOneWithoutMeetingInput
  actionItems?: Prisma.ActionItemUncheckedCreateNestedManyWithoutMeetingInput
  topics?: Prisma.TopicUncheckedCreateNestedManyWithoutMeetingInput
  tags?: Prisma.MeetingTagUncheckedCreateNestedManyWithoutMeetingInput
}

export type MeetingCreateOrConnectWithoutCommentsInput = {
  where: Prisma.MeetingWhereUniqueInput
  create: Prisma.XOR<Prisma.MeetingCreateWithoutCommentsInput, Prisma.MeetingUncheckedCreateWithoutCommentsInput>
}

export type MeetingUpsertWithoutCommentsInput = {
  update: Prisma.XOR<Prisma.MeetingUpdateWithoutCommentsInput, Prisma.MeetingUncheckedUpdateWithoutCommentsInput>
  create: Prisma.XOR<Prisma.MeetingCreateWithoutCommentsInput, Prisma.MeetingUncheckedCreateWithoutCommentsInput>
  where?: Prisma.MeetingWhereInput
}

export type MeetingUpdateToOneWithWhereWithoutCommentsInput = {
  where?: Prisma.MeetingWhereInput
  data: Prisma.XOR<Prisma.MeetingUpdateWithoutCommentsInput, Prisma.MeetingUncheckedUpdateWithoutCommentsInput>
}

export type MeetingUpdateWithoutCommentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumMeetingStatusFieldUpdateOperationsInput | $Enums.MeetingStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutMeetingsNestedInput
  workspace?: Prisma.WorkspaceUpdateOneWithoutMeetingsNestedInput
  participants?: Prisma.MeetingParticipantUpdateManyWithoutMeetingNestedInput
  files?: Prisma.MeetingFileUpdateManyWithoutMeetingNestedInput
  transcript?: Prisma.MeetingTranscriptUpdateOneWithoutMeetingNestedInput
  summary?: Prisma.SummaryUpdateOneWithoutMeetingNestedInput
  actionItems?: Prisma.ActionItemUpdateManyWithoutMeetingNestedInput
  topics?: Prisma.TopicUpdateManyWithoutMeetingNestedInput
  tags?: Prisma.MeetingTagUpdateManyWithoutMeetingNestedInput
}

export type MeetingUncheckedUpdateWithoutCommentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumMeetingStatusFieldUpdateOperationsInput | $Enums.MeetingStatus
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  workspaceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  participants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutMeetingNestedInput
  files?: Prisma.MeetingFileUncheckedUpdateManyWithoutMeetingNestedInput
  transcript?: Prisma.MeetingTranscriptUncheckedUpdateOneWithoutMeetingNestedInput
  summary?: Prisma.SummaryUncheckedUpdateOneWithoutMeetingNestedInput
  actionItems?: Prisma.ActionItemUncheckedUpdateManyWithoutMeetingNestedInput
  topics?: Prisma.TopicUncheckedUpdateManyWithoutMeetingNestedInput
  tags?: Prisma.MeetingTagUncheckedUpdateManyWithoutMeetingNestedInput
}

export type MeetingCreateWithoutTagsInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt?: Date | string | null
  duration?: number | null
  status?: $Enums.MeetingStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutMeetingsInput
  workspace?: Prisma.WorkspaceCreateNestedOneWithoutMeetingsInput
  participants?: Prisma.MeetingParticipantCreateNestedManyWithoutMeetingInput
  files?: Prisma.MeetingFileCreateNestedManyWithoutMeetingInput
  transcript?: Prisma.MeetingTranscriptCreateNestedOneWithoutMeetingInput
  summary?: Prisma.SummaryCreateNestedOneWithoutMeetingInput
  actionItems?: Prisma.ActionItemCreateNestedManyWithoutMeetingInput
  topics?: Prisma.TopicCreateNestedManyWithoutMeetingInput
  comments?: Prisma.CommentCreateNestedManyWithoutMeetingInput
}

export type MeetingUncheckedCreateWithoutTagsInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt?: Date | string | null
  duration?: number | null
  status?: $Enums.MeetingStatus
  userId: string
  workspaceId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  participants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutMeetingInput
  files?: Prisma.MeetingFileUncheckedCreateNestedManyWithoutMeetingInput
  transcript?: Prisma.MeetingTranscriptUncheckedCreateNestedOneWithoutMeetingInput
  summary?: Prisma.SummaryUncheckedCreateNestedOneWithoutMeetingInput
  actionItems?: Prisma.ActionItemUncheckedCreateNestedManyWithoutMeetingInput
  topics?: Prisma.TopicUncheckedCreateNestedManyWithoutMeetingInput
  comments?: Prisma.CommentUncheckedCreateNestedManyWithoutMeetingInput
}

export type MeetingCreateOrConnectWithoutTagsInput = {
  where: Prisma.MeetingWhereUniqueInput
  create: Prisma.XOR<Prisma.MeetingCreateWithoutTagsInput, Prisma.MeetingUncheckedCreateWithoutTagsInput>
}

export type MeetingUpsertWithoutTagsInput = {
  update: Prisma.XOR<Prisma.MeetingUpdateWithoutTagsInput, Prisma.MeetingUncheckedUpdateWithoutTagsInput>
  create: Prisma.XOR<Prisma.MeetingCreateWithoutTagsInput, Prisma.MeetingUncheckedCreateWithoutTagsInput>
  where?: Prisma.MeetingWhereInput
}

export type MeetingUpdateToOneWithWhereWithoutTagsInput = {
  where?: Prisma.MeetingWhereInput
  data: Prisma.XOR<Prisma.MeetingUpdateWithoutTagsInput, Prisma.MeetingUncheckedUpdateWithoutTagsInput>
}

export type MeetingUpdateWithoutTagsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumMeetingStatusFieldUpdateOperationsInput | $Enums.MeetingStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutMeetingsNestedInput
  workspace?: Prisma.WorkspaceUpdateOneWithoutMeetingsNestedInput
  participants?: Prisma.MeetingParticipantUpdateManyWithoutMeetingNestedInput
  files?: Prisma.MeetingFileUpdateManyWithoutMeetingNestedInput
  transcript?: Prisma.MeetingTranscriptUpdateOneWithoutMeetingNestedInput
  summary?: Prisma.SummaryUpdateOneWithoutMeetingNestedInput
  actionItems?: Prisma.ActionItemUpdateManyWithoutMeetingNestedInput
  topics?: Prisma.TopicUpdateManyWithoutMeetingNestedInput
  comments?: Prisma.CommentUpdateManyWithoutMeetingNestedInput
}

export type MeetingUncheckedUpdateWithoutTagsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumMeetingStatusFieldUpdateOperationsInput | $Enums.MeetingStatus
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  workspaceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  participants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutMeetingNestedInput
  files?: Prisma.MeetingFileUncheckedUpdateManyWithoutMeetingNestedInput
  transcript?: Prisma.MeetingTranscriptUncheckedUpdateOneWithoutMeetingNestedInput
  summary?: Prisma.SummaryUncheckedUpdateOneWithoutMeetingNestedInput
  actionItems?: Prisma.ActionItemUncheckedUpdateManyWithoutMeetingNestedInput
  topics?: Prisma.TopicUncheckedUpdateManyWithoutMeetingNestedInput
  comments?: Prisma.CommentUncheckedUpdateManyWithoutMeetingNestedInput
}

export type MeetingCreateManyUserInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt?: Date | string | null
  duration?: number | null
  status?: $Enums.MeetingStatus
  workspaceId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MeetingUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumMeetingStatusFieldUpdateOperationsInput | $Enums.MeetingStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  workspace?: Prisma.WorkspaceUpdateOneWithoutMeetingsNestedInput
  participants?: Prisma.MeetingParticipantUpdateManyWithoutMeetingNestedInput
  files?: Prisma.MeetingFileUpdateManyWithoutMeetingNestedInput
  transcript?: Prisma.MeetingTranscriptUpdateOneWithoutMeetingNestedInput
  summary?: Prisma.SummaryUpdateOneWithoutMeetingNestedInput
  actionItems?: Prisma.ActionItemUpdateManyWithoutMeetingNestedInput
  topics?: Prisma.TopicUpdateManyWithoutMeetingNestedInput
  comments?: Prisma.CommentUpdateManyWithoutMeetingNestedInput
  tags?: Prisma.MeetingTagUpdateManyWithoutMeetingNestedInput
}

export type MeetingUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumMeetingStatusFieldUpdateOperationsInput | $Enums.MeetingStatus
  workspaceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  participants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutMeetingNestedInput
  files?: Prisma.MeetingFileUncheckedUpdateManyWithoutMeetingNestedInput
  transcript?: Prisma.MeetingTranscriptUncheckedUpdateOneWithoutMeetingNestedInput
  summary?: Prisma.SummaryUncheckedUpdateOneWithoutMeetingNestedInput
  actionItems?: Prisma.ActionItemUncheckedUpdateManyWithoutMeetingNestedInput
  topics?: Prisma.TopicUncheckedUpdateManyWithoutMeetingNestedInput
  comments?: Prisma.CommentUncheckedUpdateManyWithoutMeetingNestedInput
  tags?: Prisma.MeetingTagUncheckedUpdateManyWithoutMeetingNestedInput
}

export type MeetingUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumMeetingStatusFieldUpdateOperationsInput | $Enums.MeetingStatus
  workspaceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MeetingCreateManyWorkspaceInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt?: Date | string | null
  duration?: number | null
  status?: $Enums.MeetingStatus
  userId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MeetingUpdateWithoutWorkspaceInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumMeetingStatusFieldUpdateOperationsInput | $Enums.MeetingStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutMeetingsNestedInput
  participants?: Prisma.MeetingParticipantUpdateManyWithoutMeetingNestedInput
  files?: Prisma.MeetingFileUpdateManyWithoutMeetingNestedInput
  transcript?: Prisma.MeetingTranscriptUpdateOneWithoutMeetingNestedInput
  summary?: Prisma.SummaryUpdateOneWithoutMeetingNestedInput
  actionItems?: Prisma.ActionItemUpdateManyWithoutMeetingNestedInput
  topics?: Prisma.TopicUpdateManyWithoutMeetingNestedInput
  comments?: Prisma.CommentUpdateManyWithoutMeetingNestedInput
  tags?: Prisma.MeetingTagUpdateManyWithoutMeetingNestedInput
}

export type MeetingUncheckedUpdateWithoutWorkspaceInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumMeetingStatusFieldUpdateOperationsInput | $Enums.MeetingStatus
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  participants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutMeetingNestedInput
  files?: Prisma.MeetingFileUncheckedUpdateManyWithoutMeetingNestedInput
  transcript?: Prisma.MeetingTranscriptUncheckedUpdateOneWithoutMeetingNestedInput
  summary?: Prisma.SummaryUncheckedUpdateOneWithoutMeetingNestedInput
  actionItems?: Prisma.ActionItemUncheckedUpdateManyWithoutMeetingNestedInput
  topics?: Prisma.TopicUncheckedUpdateManyWithoutMeetingNestedInput
  comments?: Prisma.CommentUncheckedUpdateManyWithoutMeetingNestedInput
  tags?: Prisma.MeetingTagUncheckedUpdateManyWithoutMeetingNestedInput
}

export type MeetingUncheckedUpdateManyWithoutWorkspaceInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  status?: Prisma.EnumMeetingStatusFieldUpdateOperationsInput | $Enums.MeetingStatus
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type MeetingCountOutputType
 */

export type MeetingCountOutputType = {
  participants: number
  files: number
  actionItems: number
  topics: number
  comments: number
  tags: number
}

export type MeetingCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  participants?: boolean | MeetingCountOutputTypeCountParticipantsArgs
  files?: boolean | MeetingCountOutputTypeCountFilesArgs
  actionItems?: boolean | MeetingCountOutputTypeCountActionItemsArgs
  topics?: boolean | MeetingCountOutputTypeCountTopicsArgs
  comments?: boolean | MeetingCountOutputTypeCountCommentsArgs
  tags?: boolean | MeetingCountOutputTypeCountTagsArgs
}

/**
 * MeetingCountOutputType without action
 */
export type MeetingCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MeetingCountOutputType
   */
  select?: Prisma.MeetingCountOutputTypeSelect<ExtArgs> | null
}

/**
 * MeetingCountOutputType without action
 */
export type MeetingCountOutputTypeCountParticipantsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MeetingParticipantWhereInput
}

/**
 * MeetingCountOutputType without action
 */
export type MeetingCountOutputTypeCountFilesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MeetingFileWhereInput
}

/**
 * MeetingCountOutputType without action
 */
export type MeetingCountOutputTypeCountActionItemsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ActionItemWhereInput
}

/**
 * MeetingCountOutputType without action
 */
export type MeetingCountOutputTypeCountTopicsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TopicWhereInput
}

/**
 * MeetingCountOutputType without action
 */
export type MeetingCountOutputTypeCountCommentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.CommentWhereInput
}

/**
 * MeetingCountOutputType without action
 */
export type MeetingCountOutputTypeCountTagsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MeetingTagWhereInput
}


export type MeetingSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  description?: boolean
  scheduledAt?: boolean
  duration?: boolean
  status?: boolean
  userId?: boolean
  workspaceId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  workspace?: boolean | Prisma.Meeting$workspaceArgs<ExtArgs>
  participants?: boolean | Prisma.Meeting$participantsArgs<ExtArgs>
  files?: boolean | Prisma.Meeting$filesArgs<ExtArgs>
  transcript?: boolean | Prisma.Meeting$transcriptArgs<ExtArgs>
  summary?: boolean | Prisma.Meeting$summaryArgs<ExtArgs>
  actionItems?: boolean | Prisma.Meeting$actionItemsArgs<ExtArgs>
  topics?: boolean | Prisma.Meeting$topicsArgs<ExtArgs>
  comments?: boolean | Prisma.Meeting$commentsArgs<ExtArgs>
  tags?: boolean | Prisma.Meeting$tagsArgs<ExtArgs>
  _count?: boolean | Prisma.MeetingCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["meeting"]>

export type MeetingSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  description?: boolean
  scheduledAt?: boolean
  duration?: boolean
  status?: boolean
  userId?: boolean
  workspaceId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  workspace?: boolean | Prisma.Meeting$workspaceArgs<ExtArgs>
}, ExtArgs["result"]["meeting"]>

export type MeetingSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  description?: boolean
  scheduledAt?: boolean
  duration?: boolean
  status?: boolean
  userId?: boolean
  workspaceId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  workspace?: boolean | Prisma.Meeting$workspaceArgs<ExtArgs>
}, ExtArgs["result"]["meeting"]>

export type MeetingSelectScalar = {
  id?: boolean
  title?: boolean
  description?: boolean
  scheduledAt?: boolean
  duration?: boolean
  status?: boolean
  userId?: boolean
  workspaceId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type MeetingOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "title" | "description" | "scheduledAt" | "duration" | "status" | "userId" | "workspaceId" | "createdAt" | "updatedAt", ExtArgs["result"]["meeting"]>
export type MeetingInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  workspace?: boolean | Prisma.Meeting$workspaceArgs<ExtArgs>
  participants?: boolean | Prisma.Meeting$participantsArgs<ExtArgs>
  files?: boolean | Prisma.Meeting$filesArgs<ExtArgs>
  transcript?: boolean | Prisma.Meeting$transcriptArgs<ExtArgs>
  summary?: boolean | Prisma.Meeting$summaryArgs<ExtArgs>
  actionItems?: boolean | Prisma.Meeting$actionItemsArgs<ExtArgs>
  topics?: boolean | Prisma.Meeting$topicsArgs<ExtArgs>
  comments?: boolean | Prisma.Meeting$commentsArgs<ExtArgs>
  tags?: boolean | Prisma.Meeting$tagsArgs<ExtArgs>
  _count?: boolean | Prisma.MeetingCountOutputTypeDefaultArgs<ExtArgs>
}
export type MeetingIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  workspace?: boolean | Prisma.Meeting$workspaceArgs<ExtArgs>
}
export type MeetingIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  workspace?: boolean | Prisma.Meeting$workspaceArgs<ExtArgs>
}

export type $MeetingPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Meeting"
  objects: {
    user: Prisma.$UserPayload<ExtArgs>
    workspace: Prisma.$WorkspacePayload<ExtArgs> | null
    participants: Prisma.$MeetingParticipantPayload<ExtArgs>[]
    files: Prisma.$MeetingFilePayload<ExtArgs>[]
    transcript: Prisma.$MeetingTranscriptPayload<ExtArgs> | null
    summary: Prisma.$SummaryPayload<ExtArgs> | null
    actionItems: Prisma.$ActionItemPayload<ExtArgs>[]
    topics: Prisma.$TopicPayload<ExtArgs>[]
    comments: Prisma.$CommentPayload<ExtArgs>[]
    tags: Prisma.$MeetingTagPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    title: string
    description: string | null
    scheduledAt: Date | null
    duration: number | null
    status: $Enums.MeetingStatus
    userId: string
    workspaceId: string | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["meeting"]>
  composites: {}
}

export type MeetingGetPayload<S extends boolean | null | undefined | MeetingDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$MeetingPayload, S>

export type MeetingCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<MeetingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: MeetingCountAggregateInputType | true
  }

export interface MeetingDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Meeting'], meta: { name: 'Meeting' } }
  /**
   * Find zero or one Meeting that matches the filter.
   * @param {MeetingFindUniqueArgs} args - Arguments to find a Meeting
   * @example
   * // Get one Meeting
   * const meeting = await prisma.meeting.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends MeetingFindUniqueArgs>(args: Prisma.SelectSubset<T, MeetingFindUniqueArgs<ExtArgs>>): Prisma.Prisma__MeetingClient<runtime.Types.Result.GetResult<Prisma.$MeetingPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Meeting that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {MeetingFindUniqueOrThrowArgs} args - Arguments to find a Meeting
   * @example
   * // Get one Meeting
   * const meeting = await prisma.meeting.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends MeetingFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, MeetingFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__MeetingClient<runtime.Types.Result.GetResult<Prisma.$MeetingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Meeting that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MeetingFindFirstArgs} args - Arguments to find a Meeting
   * @example
   * // Get one Meeting
   * const meeting = await prisma.meeting.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends MeetingFindFirstArgs>(args?: Prisma.SelectSubset<T, MeetingFindFirstArgs<ExtArgs>>): Prisma.Prisma__MeetingClient<runtime.Types.Result.GetResult<Prisma.$MeetingPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Meeting that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MeetingFindFirstOrThrowArgs} args - Arguments to find a Meeting
   * @example
   * // Get one Meeting
   * const meeting = await prisma.meeting.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends MeetingFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, MeetingFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__MeetingClient<runtime.Types.Result.GetResult<Prisma.$MeetingPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Meetings that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MeetingFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Meetings
   * const meetings = await prisma.meeting.findMany()
   * 
   * // Get first 10 Meetings
   * const meetings = await prisma.meeting.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const meetingWithIdOnly = await prisma.meeting.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends MeetingFindManyArgs>(args?: Prisma.SelectSubset<T, MeetingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MeetingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Meeting.
   * @param {MeetingCreateArgs} args - Arguments to create a Meeting.
   * @example
   * // Create one Meeting
   * const Meeting = await prisma.meeting.create({
   *   data: {
   *     // ... data to create a Meeting
   *   }
   * })
   * 
   */
  create<T extends MeetingCreateArgs>(args: Prisma.SelectSubset<T, MeetingCreateArgs<ExtArgs>>): Prisma.Prisma__MeetingClient<runtime.Types.Result.GetResult<Prisma.$MeetingPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Meetings.
   * @param {MeetingCreateManyArgs} args - Arguments to create many Meetings.
   * @example
   * // Create many Meetings
   * const meeting = await prisma.meeting.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends MeetingCreateManyArgs>(args?: Prisma.SelectSubset<T, MeetingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Meetings and returns the data saved in the database.
   * @param {MeetingCreateManyAndReturnArgs} args - Arguments to create many Meetings.
   * @example
   * // Create many Meetings
   * const meeting = await prisma.meeting.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Meetings and only return the `id`
   * const meetingWithIdOnly = await prisma.meeting.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends MeetingCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, MeetingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MeetingPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Meeting.
   * @param {MeetingDeleteArgs} args - Arguments to delete one Meeting.
   * @example
   * // Delete one Meeting
   * const Meeting = await prisma.meeting.delete({
   *   where: {
   *     // ... filter to delete one Meeting
   *   }
   * })
   * 
   */
  delete<T extends MeetingDeleteArgs>(args: Prisma.SelectSubset<T, MeetingDeleteArgs<ExtArgs>>): Prisma.Prisma__MeetingClient<runtime.Types.Result.GetResult<Prisma.$MeetingPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Meeting.
   * @param {MeetingUpdateArgs} args - Arguments to update one Meeting.
   * @example
   * // Update one Meeting
   * const meeting = await prisma.meeting.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends MeetingUpdateArgs>(args: Prisma.SelectSubset<T, MeetingUpdateArgs<ExtArgs>>): Prisma.Prisma__MeetingClient<runtime.Types.Result.GetResult<Prisma.$MeetingPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Meetings.
   * @param {MeetingDeleteManyArgs} args - Arguments to filter Meetings to delete.
   * @example
   * // Delete a few Meetings
   * const { count } = await prisma.meeting.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends MeetingDeleteManyArgs>(args?: Prisma.SelectSubset<T, MeetingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Meetings.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MeetingUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Meetings
   * const meeting = await prisma.meeting.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends MeetingUpdateManyArgs>(args: Prisma.SelectSubset<T, MeetingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Meetings and returns the data updated in the database.
   * @param {MeetingUpdateManyAndReturnArgs} args - Arguments to update many Meetings.
   * @example
   * // Update many Meetings
   * const meeting = await prisma.meeting.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Meetings and only return the `id`
   * const meetingWithIdOnly = await prisma.meeting.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends MeetingUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, MeetingUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MeetingPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Meeting.
   * @param {MeetingUpsertArgs} args - Arguments to update or create a Meeting.
   * @example
   * // Update or create a Meeting
   * const meeting = await prisma.meeting.upsert({
   *   create: {
   *     // ... data to create a Meeting
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Meeting we want to update
   *   }
   * })
   */
  upsert<T extends MeetingUpsertArgs>(args: Prisma.SelectSubset<T, MeetingUpsertArgs<ExtArgs>>): Prisma.Prisma__MeetingClient<runtime.Types.Result.GetResult<Prisma.$MeetingPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Meetings.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MeetingCountArgs} args - Arguments to filter Meetings to count.
   * @example
   * // Count the number of Meetings
   * const count = await prisma.meeting.count({
   *   where: {
   *     // ... the filter for the Meetings we want to count
   *   }
   * })
  **/
  count<T extends MeetingCountArgs>(
    args?: Prisma.Subset<T, MeetingCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], MeetingCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Meeting.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MeetingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends MeetingAggregateArgs>(args: Prisma.Subset<T, MeetingAggregateArgs>): Prisma.PrismaPromise<GetMeetingAggregateType<T>>

  /**
   * Group by Meeting.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MeetingGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends MeetingGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: MeetingGroupByArgs['orderBy'] }
      : { orderBy?: MeetingGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, MeetingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMeetingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Meeting model
 */
readonly fields: MeetingFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Meeting.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__MeetingClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  workspace<T extends Prisma.Meeting$workspaceArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Meeting$workspaceArgs<ExtArgs>>): Prisma.Prisma__WorkspaceClient<runtime.Types.Result.GetResult<Prisma.$WorkspacePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  participants<T extends Prisma.Meeting$participantsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Meeting$participantsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MeetingParticipantPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  files<T extends Prisma.Meeting$filesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Meeting$filesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MeetingFilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  transcript<T extends Prisma.Meeting$transcriptArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Meeting$transcriptArgs<ExtArgs>>): Prisma.Prisma__MeetingTranscriptClient<runtime.Types.Result.GetResult<Prisma.$MeetingTranscriptPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  summary<T extends Prisma.Meeting$summaryArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Meeting$summaryArgs<ExtArgs>>): Prisma.Prisma__SummaryClient<runtime.Types.Result.GetResult<Prisma.$SummaryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  actionItems<T extends Prisma.Meeting$actionItemsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Meeting$actionItemsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ActionItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  topics<T extends Prisma.Meeting$topicsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Meeting$topicsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TopicPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  comments<T extends Prisma.Meeting$commentsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Meeting$commentsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  tags<T extends Prisma.Meeting$tagsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Meeting$tagsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MeetingTagPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Meeting model
 */
export interface MeetingFieldRefs {
  readonly id: Prisma.FieldRef<"Meeting", 'String'>
  readonly title: Prisma.FieldRef<"Meeting", 'String'>
  readonly description: Prisma.FieldRef<"Meeting", 'String'>
  readonly scheduledAt: Prisma.FieldRef<"Meeting", 'DateTime'>
  readonly duration: Prisma.FieldRef<"Meeting", 'Int'>
  readonly status: Prisma.FieldRef<"Meeting", 'MeetingStatus'>
  readonly userId: Prisma.FieldRef<"Meeting", 'String'>
  readonly workspaceId: Prisma.FieldRef<"Meeting", 'String'>
  readonly createdAt: Prisma.FieldRef<"Meeting", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Meeting", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Meeting findUnique
 */
export type MeetingFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Meeting
   */
  select?: Prisma.MeetingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Meeting
   */
  omit?: Prisma.MeetingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingInclude<ExtArgs> | null
  /**
   * Filter, which Meeting to fetch.
   */
  where: Prisma.MeetingWhereUniqueInput
}

/**
 * Meeting findUniqueOrThrow
 */
export type MeetingFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Meeting
   */
  select?: Prisma.MeetingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Meeting
   */
  omit?: Prisma.MeetingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingInclude<ExtArgs> | null
  /**
   * Filter, which Meeting to fetch.
   */
  where: Prisma.MeetingWhereUniqueInput
}

/**
 * Meeting findFirst
 */
export type MeetingFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Meeting
   */
  select?: Prisma.MeetingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Meeting
   */
  omit?: Prisma.MeetingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingInclude<ExtArgs> | null
  /**
   * Filter, which Meeting to fetch.
   */
  where?: Prisma.MeetingWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Meetings to fetch.
   */
  orderBy?: Prisma.MeetingOrderByWithRelationInput | Prisma.MeetingOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Meetings.
   */
  cursor?: Prisma.MeetingWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Meetings from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Meetings.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Meetings.
   */
  distinct?: Prisma.MeetingScalarFieldEnum | Prisma.MeetingScalarFieldEnum[]
}

/**
 * Meeting findFirstOrThrow
 */
export type MeetingFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Meeting
   */
  select?: Prisma.MeetingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Meeting
   */
  omit?: Prisma.MeetingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingInclude<ExtArgs> | null
  /**
   * Filter, which Meeting to fetch.
   */
  where?: Prisma.MeetingWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Meetings to fetch.
   */
  orderBy?: Prisma.MeetingOrderByWithRelationInput | Prisma.MeetingOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Meetings.
   */
  cursor?: Prisma.MeetingWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Meetings from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Meetings.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Meetings.
   */
  distinct?: Prisma.MeetingScalarFieldEnum | Prisma.MeetingScalarFieldEnum[]
}

/**
 * Meeting findMany
 */
export type MeetingFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Meeting
   */
  select?: Prisma.MeetingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Meeting
   */
  omit?: Prisma.MeetingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingInclude<ExtArgs> | null
  /**
   * Filter, which Meetings to fetch.
   */
  where?: Prisma.MeetingWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Meetings to fetch.
   */
  orderBy?: Prisma.MeetingOrderByWithRelationInput | Prisma.MeetingOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Meetings.
   */
  cursor?: Prisma.MeetingWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Meetings from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Meetings.
   */
  skip?: number
  distinct?: Prisma.MeetingScalarFieldEnum | Prisma.MeetingScalarFieldEnum[]
}

/**
 * Meeting create
 */
export type MeetingCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Meeting
   */
  select?: Prisma.MeetingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Meeting
   */
  omit?: Prisma.MeetingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingInclude<ExtArgs> | null
  /**
   * The data needed to create a Meeting.
   */
  data: Prisma.XOR<Prisma.MeetingCreateInput, Prisma.MeetingUncheckedCreateInput>
}

/**
 * Meeting createMany
 */
export type MeetingCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Meetings.
   */
  data: Prisma.MeetingCreateManyInput | Prisma.MeetingCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Meeting createManyAndReturn
 */
export type MeetingCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Meeting
   */
  select?: Prisma.MeetingSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Meeting
   */
  omit?: Prisma.MeetingOmit<ExtArgs> | null
  /**
   * The data used to create many Meetings.
   */
  data: Prisma.MeetingCreateManyInput | Prisma.MeetingCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Meeting update
 */
export type MeetingUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Meeting
   */
  select?: Prisma.MeetingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Meeting
   */
  omit?: Prisma.MeetingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingInclude<ExtArgs> | null
  /**
   * The data needed to update a Meeting.
   */
  data: Prisma.XOR<Prisma.MeetingUpdateInput, Prisma.MeetingUncheckedUpdateInput>
  /**
   * Choose, which Meeting to update.
   */
  where: Prisma.MeetingWhereUniqueInput
}

/**
 * Meeting updateMany
 */
export type MeetingUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Meetings.
   */
  data: Prisma.XOR<Prisma.MeetingUpdateManyMutationInput, Prisma.MeetingUncheckedUpdateManyInput>
  /**
   * Filter which Meetings to update
   */
  where?: Prisma.MeetingWhereInput
  /**
   * Limit how many Meetings to update.
   */
  limit?: number
}

/**
 * Meeting updateManyAndReturn
 */
export type MeetingUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Meeting
   */
  select?: Prisma.MeetingSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Meeting
   */
  omit?: Prisma.MeetingOmit<ExtArgs> | null
  /**
   * The data used to update Meetings.
   */
  data: Prisma.XOR<Prisma.MeetingUpdateManyMutationInput, Prisma.MeetingUncheckedUpdateManyInput>
  /**
   * Filter which Meetings to update
   */
  where?: Prisma.MeetingWhereInput
  /**
   * Limit how many Meetings to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Meeting upsert
 */
export type MeetingUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Meeting
   */
  select?: Prisma.MeetingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Meeting
   */
  omit?: Prisma.MeetingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingInclude<ExtArgs> | null
  /**
   * The filter to search for the Meeting to update in case it exists.
   */
  where: Prisma.MeetingWhereUniqueInput
  /**
   * In case the Meeting found by the `where` argument doesn't exist, create a new Meeting with this data.
   */
  create: Prisma.XOR<Prisma.MeetingCreateInput, Prisma.MeetingUncheckedCreateInput>
  /**
   * In case the Meeting was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.MeetingUpdateInput, Prisma.MeetingUncheckedUpdateInput>
}

/**
 * Meeting delete
 */
export type MeetingDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Meeting
   */
  select?: Prisma.MeetingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Meeting
   */
  omit?: Prisma.MeetingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingInclude<ExtArgs> | null
  /**
   * Filter which Meeting to delete.
   */
  where: Prisma.MeetingWhereUniqueInput
}

/**
 * Meeting deleteMany
 */
export type MeetingDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Meetings to delete
   */
  where?: Prisma.MeetingWhereInput
  /**
   * Limit how many Meetings to delete.
   */
  limit?: number
}

/**
 * Meeting.workspace
 */
export type Meeting$workspaceArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Workspace
   */
  select?: Prisma.WorkspaceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Workspace
   */
  omit?: Prisma.WorkspaceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkspaceInclude<ExtArgs> | null
  where?: Prisma.WorkspaceWhereInput
}

/**
 * Meeting.participants
 */
export type Meeting$participantsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MeetingParticipant
   */
  select?: Prisma.MeetingParticipantSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MeetingParticipant
   */
  omit?: Prisma.MeetingParticipantOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingParticipantInclude<ExtArgs> | null
  where?: Prisma.MeetingParticipantWhereInput
  orderBy?: Prisma.MeetingParticipantOrderByWithRelationInput | Prisma.MeetingParticipantOrderByWithRelationInput[]
  cursor?: Prisma.MeetingParticipantWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MeetingParticipantScalarFieldEnum | Prisma.MeetingParticipantScalarFieldEnum[]
}

/**
 * Meeting.files
 */
export type Meeting$filesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MeetingFile
   */
  select?: Prisma.MeetingFileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MeetingFile
   */
  omit?: Prisma.MeetingFileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingFileInclude<ExtArgs> | null
  where?: Prisma.MeetingFileWhereInput
  orderBy?: Prisma.MeetingFileOrderByWithRelationInput | Prisma.MeetingFileOrderByWithRelationInput[]
  cursor?: Prisma.MeetingFileWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MeetingFileScalarFieldEnum | Prisma.MeetingFileScalarFieldEnum[]
}

/**
 * Meeting.transcript
 */
export type Meeting$transcriptArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MeetingTranscript
   */
  select?: Prisma.MeetingTranscriptSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MeetingTranscript
   */
  omit?: Prisma.MeetingTranscriptOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingTranscriptInclude<ExtArgs> | null
  where?: Prisma.MeetingTranscriptWhereInput
}

/**
 * Meeting.summary
 */
export type Meeting$summaryArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Summary
   */
  select?: Prisma.SummarySelect<ExtArgs> | null
  /**
   * Omit specific fields from the Summary
   */
  omit?: Prisma.SummaryOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SummaryInclude<ExtArgs> | null
  where?: Prisma.SummaryWhereInput
}

/**
 * Meeting.actionItems
 */
export type Meeting$actionItemsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ActionItem
   */
  select?: Prisma.ActionItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ActionItem
   */
  omit?: Prisma.ActionItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ActionItemInclude<ExtArgs> | null
  where?: Prisma.ActionItemWhereInput
  orderBy?: Prisma.ActionItemOrderByWithRelationInput | Prisma.ActionItemOrderByWithRelationInput[]
  cursor?: Prisma.ActionItemWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ActionItemScalarFieldEnum | Prisma.ActionItemScalarFieldEnum[]
}

/**
 * Meeting.topics
 */
export type Meeting$topicsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Topic
   */
  select?: Prisma.TopicSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Topic
   */
  omit?: Prisma.TopicOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TopicInclude<ExtArgs> | null
  where?: Prisma.TopicWhereInput
  orderBy?: Prisma.TopicOrderByWithRelationInput | Prisma.TopicOrderByWithRelationInput[]
  cursor?: Prisma.TopicWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TopicScalarFieldEnum | Prisma.TopicScalarFieldEnum[]
}

/**
 * Meeting.comments
 */
export type Meeting$commentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Comment
   */
  select?: Prisma.CommentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Comment
   */
  omit?: Prisma.CommentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CommentInclude<ExtArgs> | null
  where?: Prisma.CommentWhereInput
  orderBy?: Prisma.CommentOrderByWithRelationInput | Prisma.CommentOrderByWithRelationInput[]
  cursor?: Prisma.CommentWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.CommentScalarFieldEnum | Prisma.CommentScalarFieldEnum[]
}

/**
 * Meeting.tags
 */
export type Meeting$tagsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MeetingTag
   */
  select?: Prisma.MeetingTagSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MeetingTag
   */
  omit?: Prisma.MeetingTagOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingTagInclude<ExtArgs> | null
  where?: Prisma.MeetingTagWhereInput
  orderBy?: Prisma.MeetingTagOrderByWithRelationInput | Prisma.MeetingTagOrderByWithRelationInput[]
  cursor?: Prisma.MeetingTagWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MeetingTagScalarFieldEnum | Prisma.MeetingTagScalarFieldEnum[]
}

/**
 * Meeting without action
 */
export type MeetingDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Meeting
   */
  select?: Prisma.MeetingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Meeting
   */
  omit?: Prisma.MeetingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingInclude<ExtArgs> | null
}
